#filename: docker-compose-gpu.yml
version: '3.3'


networks:
  prod:


services:


  consul:
    image: gcr.io/anyvision-production/consul:18.12
    restart: always
    networks:
      prod:
        aliases:
        - consul.tls.ai
    ports:
      - "8500:8500"
    volumes:
      -  /ssd/consul_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -server -bootstrap -ui
      - CONSUL_SERVER=127.0.0.1
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  consul-agent:
    image: gcr.io/anyvision-production/consul:18.12
    restart: always
    networks:
      #host_network:
      prod:
        aliases:
          - consul-agent.tls.ai
    volumes:
      - /ssd/consul_agent_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -rejoin -retry-join consul.tls.ai -retry-max 10 -retry-interval 15s -disable-host-node-id
      - CONSUL_SERVER=consul.tls.ai
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul-agent
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g


  nginx:
    image: gcr.io/anyvision-production/nginx:19.10
    restart: always
    networks:
      prod:
        aliases:
          - nginx-localnode.tls.ai
          - nginx.tls.ai
    ports:
      - "1935:1935"
      - "443:443"
      #- "80:80"
    volumes:
      - /storage:/opt/nginx/html:ro
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - limit_rate_speed=0
      - aws_host=seaweedfs-s3-localnode.tls.ai:8333
      - error_log_level=info
      - access_log=on
      - rewrite_log=on
      - default_dns_resolver=127.0.0.11
      - dns_resolver=127.0.0.11
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g

  cron:
    image: gcr.io/anyvision-production/supercronic:19.06
    restart: always
    networks:
      prod:
        aliases:
          - cron.tls.ai
    volumes:
      - /storage:/var/www/html
      - ./crontab/site_crontab:/etc/crontabs/crontab
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TO_DATE_TRACK_DELETE=30
      - API_IP=api.tls.ai 
      - CONSUL_AGENT=consul-agent.tls.ai  
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g


  dante-proxy:
    image: gcr.io/anyvision-production/dante-proxy:19.02
    restart: always
    networks:
      - prod
    ports:
      - "1080:1080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./socks/sockd.conf:/etc/sockd.conf         
    logging:
      options:
        max-size: 1g

  liveness-api:
    image: gcr.io/anyvision-training/sesame-service:codefresh
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity
    networks:
      prod:
        aliases:
          - liveness-api.tls.ai
    ports:
      - "3003:3003"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /storage/logs/liveness-api-service:/var/logs/liveness-api-service
    environment:
      - LOG_DIR_PATH=/var/logs/liveness-api-service
      - RUN_AS_USER=node
      - ENABLE_CHOWN=false
      - SERVICE_NAME=liveness-api-service
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g

  edge:
    image: gcr.io/anyvision-training/backend-pyconcrete:development
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    networks:
      prod:
       aliases:
          - edge.tls.ai
          - proc-localnode.tls.ai

    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master.tls.ai:1.1.1.1"
    ports:
      - "4005:4005"                                           
    volumes:
      - /ssd/license:/home/user/license:ro
      - /ssd/pipe_data:/root/pipe_data
      - /ssd/reid_service_data:/root/reid_service_data
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_OPENSSH_SERVICE=true
      - BACKEND_OPENSSH_PORT=9022
      - DISPLAY=${DISPLAY:-:1}
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll.tls.ai
      - track_archive_service_ip=arch.tls.ai
      - frame_store_rtmp_url=rtstreamer.tls.ai
      - frame_store_rtmp_port=80
      - misc_gpu_encoding=true
      - memsql_host=memsql.tls.ai
      - memsql_port=3306
      - DB_HOST=memsql.tls.ai
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=reid_db
      - prometheus_gateway_ip=monitor_pushgateway_1
      - ENABLE_MONITORING=false
      - external_ip=edge.tls.ai
    env_file:
      - env/global.env
      - env/edge.env
    logging:
      options:
        max-size: 1g
    ipc: host
    working_dir: /root/backend_trunk
    #entrypoint: sleep 1d
    entrypoint: ["/bin/containerpilot","-config","/etc/containerpilot.json5"]

  
  docker-hoster:
    image: gcr.io/anyvision-production/docker-hoster
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hosts:/tmp/hosts
    logging:
      options:
        max-size: 1g
