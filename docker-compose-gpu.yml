#filename: docker-compose-gpu.yml
version: '3.3'


volumes:
  redis_db_data:
  #api_gateway_keys:
  consul_data:
  consul_agent_data:


networks:
  prod:


services:


  node-rtsp-rtmp-server:
    image: gcr.io/anyvision-production/node-rtsp-rtmp-server
    restart: always
    networks:
      - prod
    # ports:
    #   - "80:80"
    #   - "1935:1935"
    logging:
      options:
        max-size: 1g



  webrtc-streamer:
    image: gcr.io/anyvision-production/webrtc-streamer:development
    restart: always
    networks:
      prod:
        aliases:
          - webrtc-localnode.tls.ai
    ports:
      - "8000:8000"
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - HOST_IP=${HOST_IP}
      - WEBRTC_STREAMER_OPTIONS=-nDefault -urtsp://184.72.239.149/vod/mp4:BigBuckBunny_175k.mov -H0.0.0.0:8000s -scoturn-localnode.tls.ai:3478 -twebrtc:webrtc@coturn-localnode.tls.ai:3478 -w/webrtc-streamer/html -c/usr/local/share/ca-certificates/tls.ai/tls.ai.full.with.key.pem
    logging:
      options:
        max-size: 1g



  coturn:
    image: gcr.io/anyvision-production/coturn:latest
    restart: always
    networks:
      prod:
        aliases:
          - coturn-localnode.tls.ai
    ports:
      - "3478:3478"
      - "49160-49260:49160-49260/udp"
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - HOST_IP=${HOST_IP}
    command: -v -n --log-file=stdout --min-port=49160 --max-port=49260 --no-stun --no-multicast-peers --no-loopback-peers --fingerprint --external-ip=${HOST_IP} --user webrtc:webrtc --lt-cred-mech --realm tls.ai --cert /usr/local/share/ca-certificates/tls.ai/tls.ai.full.pem --pkey /usr/local/share/ca-certificates/tls.ai/tls.ai.key
    logging:
      options:
        max-size: 1g



  seaweedfs-master:
    image: gcr.io/anyvision-production/seaweedfs:19.01
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-master-localnode.tls.ai
   # ports:
   #   - "9333:9333"
    environment:
      - SEAWEEDFS_MASTER=1
      - SEAWEEDFS_MASTER_PORT=9333
      - SEAWEEDFS_MASTER_CMD=-port=9333 -ip=seaweedfs-master-localnode.tls.ai -mdir=/data -peers=seaweedfs-master-localnode.tls.ai:9333
    volumes:
      - /ssd/seaweed-master:/data
    logging:
      options:
        max-size: 1g



  seaweedfs-volume:
    image: gcr.io/anyvision-production/seaweedfs:19.01
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-volume-localnode.tls.ai
    environment:
      - SEAWEEDFS_VOLUME=1
      - SEAWEEDFS_VOLUME_PORT=8080
      - SEAWEEDFS_VOLUME_CMD=-port=8080 -ip=seaweedfs-volume-localnode.tls.ai -index=memory -max=100000 -mserver=seaweedfs-master-localnode.tls.ai:9333 -dir=/data
    volumes:
      - /storage/seaweed:/data
    logging:
      options:
        max-size: 1g



  seaweedfs-filer:
    image: gcr.io/anyvision-production/seaweedfs:19.01
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-filer-localnode.tls.ai
    ports:
       - "8888:8888"
    depends_on:
      - seaweedfs-master
    environment:
      - SEAWEEDFS_FILER=1
      - SEAWEEDFS_FILER_PORT=8888
      - SEAWEEDFS_FILER_CMD=-ip=seaweedfs-filer-localnode.tls.ai -master=seaweedfs-master-localnode.tls.ai:9333
    volumes:
      - ./seaweedfs/filer.toml:/etc/seaweedfs/filer.toml
      - /ssd/seaweed-master:/data
    logging:
      options:
        max-size: 1g



  seaweedfs-s3:
    image: gcr.io/anyvision-production/seaweedfs:19.01
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-s3-localnode.tls.ai
    ports:
       - "8333:8333"
    depends_on:
      - seaweedfs-master
    environment:
      - SEAWEEDFS_S3=1
      - SEAWEEDFS_S3_PORT=8333
      #- SEAWEEDFS_S3_CMD=-port=8333 -domainName=tls.ai -filer=seaweedfs-filer-localnode.tls.ai:8888 -filer.grpcPort=18888 -filer.dir.buckets=/buckets
      - SEAWEEDFS_S3_CMD=-port=8333 -filer=seaweedfs-filer-localnode.tls.ai:8888 -filer.grpcPort=18888 -filer.dir.buckets=/buckets
    logging:
      options:
        max-size: 1g



  consul:
    image: gcr.io/anyvision-production/consul:18.12
    restart: always
    networks:
      prod:
        aliases:
        - consul.tls.ai
    ports:
      - "8500:8500"
    volumes:
      -  consul_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -server -bootstrap -ui
      - CONSUL_SERVER=127.0.0.1
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  consul-agent:
    image: gcr.io/anyvision-production/consul:18.12
    restart: always
    networks:
      prod:
        aliases:
          - consul-agent.tls.ai
    volumes:
      - consul_agent_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -rejoin -retry-join consul.tls.ai -retry-max 10 -retry-interval 15s -disable-host-node-id
      - CONSUL_SERVER=consul.tls.ai
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul-agent
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  # guacamole:
  #   image: gcr.io/anyvision-production/guacamole:0.9.14
  #   restart: always
  #   networks:
  #     - prod
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./guacamole/user-mapping-local.xml:/etc/guacamole/user-mapping.xml
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   environment:
  #     - GUACD_LOGLEVEL=info
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g
  #
  #
  #
  # sftp:
  #   image: gcr.io/anyvision-production/sftp:alpine
  #   restart: always
  #   networks:
  #     - prod
  #   volumes:
  #     - /storage/sftp_data:/home/user
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   command: user:pass:2000:2000:files
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g



  nginx:
    image: gcr.io/anyvision-production/nginx:18.12
    restart: always
    networks:
      prod:
        aliases:
          - nginx-localnode.tls.ai
    ports:
      - "1935:1935"
      - "443:443"
      #- "80:80"
    volumes:
      - /storage:/opt/nginx/html:ro
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - limit_rate_speed=0
      - aws_host="seaweedfs-s3-localnode.tls.ai:8333"
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  # x11vnc:
  #   image: gcr.io/anyvision-production/x11vnc
  #   restart: always
  #   networks:
  #     - prod
  #   #ports:
  #     #- "5900:5900"
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     #- /dev/shm:/dev/shm:rw
  #   environment:
  #     - VNC_OPTIONS=-nodpms -noxdamage -shared -forever -passwd 123456 -rfbport 5900 -display ${DISPLAY:-:1}
  #     #- VNC_OPTIONS=-noshm -nodpms -noxdamage -shared -forever -passwd 123456 -rfbport 5900 -display ${DISPLAY:-:1}
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   ipc: host
  #   logging:
  #     options:
  #       max-size: 1g



  cron:
    image: gcr.io/anyvision-production/supercronic:18.12
    restart: always
    networks:
      prod:
        aliases:
          - cron-localnode.tls.ai
    volumes:
      - /storage:/var/www/html
      - ./crontab/site_crontab:/etc/crontabs/crontab
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - TO_DATE_TRACK_DELETE=30
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  rabbitmq:
    image: gcr.io/anyvision-production/rabbitmq:18.12
    restart: always
    hostname: rabbitmq
    networks:
      prod:
        aliases:
          - rabbitmq.tls.ai
    # those port should be opened only development mode
    #ports:
    #  - "5671:5671"
    #  - "5672:5672"
    #  - "15672:15672"
    #  - "15671:15671"
    volumes:
      - /storage/rabbitmq:/var/lib/rabbitmq
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  mongodb:
    image: gcr.io/anyvision-production/mongo:18.12
    restart: always
    networks:
      prod:
        aliases:
          - mongodb.tls.ai
    #ports:
      #- "27017:27017"
    volumes:
      - /ssd/mongo_db_data:/data/db
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  redis:
    image: gcr.io/anyvision-production/redis:18.12
    restart: always
    networks:
      prod:
        aliases:
          - redis.tls.ai
    sysctls:
      - net.core.somaxconn=511
    volumes:
      - redis_db_data:/data:rw
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    logging:
      options:
        max-size: 1g



  broadcaster:
    image: gcr.io/anyvision-production/broadcaster:1.21.0-rc.7
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: broadcaster
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - broadcaster.tls.ai
    ports:
      - "38392:38392"
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    depends_on:
      - api
    environment:
      - api_service_ip=api.tls.ai
      - BCAST_SOCKETIO_API_URL=https://api.tls.ai:5443
      - RUN_AS_USER=user
      #- ENABLE_DOCKERIZE=false
      - ENABLE_CHOWN=false
      - APP_DIR=/home/user/Broadcaster/
    env_file:
      - env/global.env
      - env/broadcaster.env
    logging:
      options:
        max-size: 1g



  # master-sync-service:
  #   image: gcr.io/anyvision-production/master-sync-service:development
  #   restart: always
  #   #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
  #   hostname: master-sync-service
  #   #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
  #   #those port should be opened only development mode
  #   #ports:
  #   #  - "16180:16180"
  #   networks:
  #     prod:
  #       aliases:
  #         - master-sync-service.tls.ai
  #   volumes:
  #     - /storage:/var/www/html
  #     - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   depends_on:
  #     - api
  #   environment:
  #     #- ENABLE_DOCKERIZE=false
  #     - ENABLE_CHOWN=false
  #     - RUN_AS_USER=user
  #   env_file:
  #     - env/global.env
  #     - env/master-sync-service.env
  #   logging:
  #     options:
  #       max-size: 1g



  apigateway:
    image: gcr.io/anyvision-production/api-gateway:1.21.0-rc.7
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - apigateway.tls.ai
          - apigateway-localnode.tls.ai
    ports:
      - "9443:9443"
      - "38391:38391"
    volumes:
      - /storage:/var/www/html
      #- api_gateway_keys:/home/user/api-gateway/config/keys
      - /ssd/apigateway/keys:/home/user/api-gateway/config/keys
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /home/anyvision/Projects/API-gateway:/home/user/api-gateway         ### mount your local project directory to the container
    depends_on:
      - redis
    environment:
      - GATEWAY_HOST=apigateway.tls.ai
      - API_HOST=api.tls.ai
      - DASH_API_URL=https://api.tls.ai:5443
      - GATEWAY_SECURE_URL=https://apigateway.tls.ai:9443
      - GATEWAY_URL=http://apigateway.tls.ai:8080
      - REDIS_HOST=redis.tls.ai
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false
      - APP_DIR=/home/user/api-gateway
    env_file:
      - env/api-gateway.env
      - env/global.env
    logging:
      options:
        max-size: 1g



  api:
    image: gcr.io/anyvision-production/api:1.21.0-rc.8
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity
    networks:
      prod:
        aliases:
          - api.tls.ai
          - api-localnode.tls.ai
    ports:
      - "5443:5443"
      - "38389:38389"
      - "3000:3000"
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /home/anyvision/Projects/Dash-API:/home/user/Dash-API               ### mount your local project directory to the container
    environment:
      - API_IP=api.tls.ai
      - MONGO_DB_IP=mongodb.tls.ai
      - CA_HOST=apigateway.tls.ai
      - MASS_IMPORT_IP=reid-localnode.tls.ai          ### use this configuration to configure localhost reid service
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false
      - APP_DIR=/home/user/Dash-API/
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g



  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g



  backend:
    image: gcr.io/anyvision-production/backend-pyconcrete:1.21.0-rc.4
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    networks:
      prod:
        aliases:
          - proc-localnode.tls.ai
          - reid-localnode.tls.ai
          - coll-localnode.tls.ai
          - arch-localnode.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master-localnode.tls.ai:1.1.1.1"
    ports:
      - "4005:4005"
      - "9067:9067"
      - "9068:9068"
      - "9069:9069"
      - "9022:9022" #ssh
      - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    volumes:
      - /home/user/license:/home/user/license:ro
      - /ssd/backend_data:/root/pipe_data
      - /ssd/track_archive_service_data:/root/track_archive_service_data
      - /storage:/var/www/html
      #- /dev:/dev:rw       ## FOR ACCESSING DEVICES - HOT-PLUGGABLE
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /root/backend_trunk:/root/backend_trunk                             ### mount your local project directory to the container
    environment:
      - DISPLAY=${DISPLAY:-:1}                                               ### local display mode - do not forget to run "xhost +" as your local host user (not as root)
      - external_ip=proc-localnode.tls.ai
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
    env_file:
      - env/backend.env
      - env/global.env
    logging:
      options:
        max-size: 1g
    ipc: host



  dante-proxy:
    image: gcr.io/anyvision-production/dante-proxy:18.12
    restart: always
    networks:
      - prod
    ports:
      - "1080:1080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./socks/sockd.conf:/etc/sockd.conf
    logging:
      options:
        max-size: 1g



  docker-hoster:
    image: gcr.io/anyvision-production/docker-hoster
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hosts:/tmp/hosts
    logging:
      options:
        max-size: 1g



  # dashboard-updater:
  #   image: gcr.io/anyvision-production/dashboard-updater:latest
  #   restart: always
  #   networks:
  #     - prod
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - /ssd/dashboards:/opt/nginx/html:rw
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   environment:
  #     - limit_rate_speed=0
  #     - DASHBOARD_VERSION=${TAG_NAME}
  #     - ENABLE_FETCHER=false
  #     - ENABLE_NGINX=true
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g
