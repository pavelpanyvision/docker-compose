#filename: docker-compose-gpu.yml
version: '3.3'


#volumes:
  #redis_db_data:
  #api_gateway_keys:
  #consul_data:
  #consul_agent_data:


networks:
  prod:
    ipam:
      driver: default
      config:
      -
        subnet: 172.30.30.0/24


services:


  consul:
    image: gcr.io/anyvision-training/consul:18.12
    restart: always
    networks:
      prod:
        aliases:
        - consul.tls.ai
    ports:
      - "8500:8500"
    volumes:
      -  /ssd/consul_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -server -bootstrap -ui
      - CONSUL_SERVER=127.0.0.1
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  consul-agent:
    image: gcr.io/anyvision-training/consul:18.12
    restart: always
    networks:
      #host_network:
      prod:
        aliases:
          - consul-agent.tls.ai
    volumes:
      - /ssd/consul_agent_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -rejoin -retry-join consul.tls.ai -retry-max 10 -retry-interval 15s -disable-host-node-id
      - CONSUL_SERVER=consul.tls.ai
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul-agent
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g


  memsql:
    image: gcr.io/anyvision-training/memsql:19.07
    restart: always
    networks:
      prod:
        aliases:
          - memsql.tls.ai
    ports:
      - "3306:3306"
    volumes:
      - /ssd/memsql:/var/lib/memsql
      - /storage/backup_memsql:/backup
    environment:
      - LICENSE_KEY=BDk3ZmFhNGU3YmJmOTQ5N2I5N2RmY2E4ZWEzZTAxYjVlAAAAAAAAAAAAAAIAAAAAAAQwNQIZAJGgtcrXzs18QzlKPsIo5SNnwVxqxH6gEwIYbWq/m+E3/flYcFfIm3ERvsxjtlbaz7O5AA==
      - MEMSQL_NODE_ROLE=AIO
      - MEMSQL_PASSWORD=password
      - AGG_MEMORY_LIMIT=4
      - LEAF_MEMORY_LIMIT=124
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g

  memsql-schema:
    image: gcr.io/anyvision-training/db-migrator:1.24.0-0BT
    restart: "no"
    networks:
      prod:
        aliases:
          - memsql-schema.tls.ai
    environment:
      - DB_HOST=memsql.tls.ai
      - DB_ACTION=update
      - DB=mysql
      - DB_NAME=tracks_db:1.23.0,reid_db:1.24.0
    logging:
      options:
        max-size: 5m
    depends_on:
      - memsql


  rtstreamer:
    image: gcr.io/anyvision-training/node-rtsp-rtmp-server:19.05
    restart: always
    networks:
      prod:
        aliases:
         - node-rtsp-rtmp-server-localnode.tls.ai
         - rtstreamer.tls.ai
    # ports:
    #   - "80:80"
    #   - "1935:1935"
    logging:
      options:
        max-size: 1g



  webrtc-streamer:
    image: gcr.io/anyvision-training/webrtc-streamer:1.24.0.0
    restart: always
    networks:
      prod:
        aliases:
          - webrtc-localnode.tls.ai
          - webrtc.tls.ai
    ports:
      - "8000:8000"
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - WEBRTC_STREAMER_OPTIONS=-H0.0.0.0:8000s -w/webrtc-streamer/html -c/usr/local/share/ca-certificates/tls.ai/tls.ai.full.with.key.pem
      #- HOST_IP=<ip of the host>
      - WAN_MODE=false
      - WAN_STUN_URL=stun.l.google.com:19302
      - APIGATEWAY_IP=apigateway.tls.ai
      - APIGATEWAY_PROTOCOL=https
      - APIGATEWAY_PORT=9443
      - NODE_RTSP_IP=rtstreamer.tls.ai
      - NODE_RTSP_PROTOCOL=rtsp
      - NODE_RTSP_PORT=80
      - CAMERA_INT_REQ_TIME=1000
      - CRT_CA_BUNDLE=/usr/local/share/ca-certificates/tls.ai/tls.ai.full.with.key.pem
    logging:
      options:
        max-size: 1g



  coturn:
    image: gcr.io/anyvision-training/coturn:19.05
    restart: always
    network_mode: host 
    volumes:
      - /ssd/coturn:/var/lib/coturn
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - COTURN_CMD=-v -n --log-file stdout --min-port 50000 --max-port 50100 --no-stun --no-multicast-peers --fingerprint --user webrtc:webrtc --lt-cred-mech --realm tls.ai
    logging:
      options:
        max-size: 1g

  seaweedfs-master:
    image: chrislusf/seaweedfs@sha256:81cfa3cb02fe909ac94da858fcc8f9b4158281d082637e41fcd2665cf93c3963
    restart: always
    command: "-v=2 master -ip=seaweedfs-master-localnode.tls.ai -mdir=/data"
    networks:
      prod:
        aliases:
         - seaweedfs-master-localnode.tls.ai
    volumes:
      - /ssd/seaweed-master:/data
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g

  seaweedfs-volume:
    image: chrislusf/seaweedfs@sha256:81cfa3cb02fe909ac94da858fcc8f9b4158281d082637e41fcd2665cf93c3963
    restart: always
    command: '-v=2 volume -max=1000 -ip=seaweedfs-volume-localnode.tls.ai -mserver=seaweedfs-master-localnode.tls.ai:9333 -port=8080 -dir=/data'
    networks:
      prod:
        aliases:
         - seaweedfs-volume-localnode.tls.ai
    volumes:
      - /storage/seaweed:/data
    logging:
      options:
        max-size: 1g
    depends_on:
      - seaweedfs-master

  seaweedfs-filer:
    image: chrislusf/seaweedfs@sha256:81cfa3cb02fe909ac94da858fcc8f9b4158281d082637e41fcd2665cf93c3963
    restart: always
    command: '-v=2 filer -master=seaweedfs-master-localnode.tls.ai:9333 -ip=seaweedfs-filer-localnode.tls.ai'
    networks:
      prod:
        aliases:
         - seaweedfs-filer-localnode.tls.ai
    ports:
       - "8888:8888"
    env_file:
      - env/global.env
    volumes:
      - ./seaweedfs/filer.toml:/etc/seaweedfs/filer.toml
      - /ssd/seaweed-filer:/data/filerldb2
    logging:
      options:
        max-size: 1g
    depends_on:
      - seaweedfs-master
      - seaweedfs-volume

  seaweedfs-s3:
    image: chrislusf/seaweedfs@sha256:81cfa3cb02fe909ac94da858fcc8f9b4158281d082637e41fcd2665cf93c3963
    restart: always
    command: '-v=2 s3 -filer=seaweedfs-filer-localnode.tls.ai:8888 -port=8333 -filer.dir.buckets="/buckets"'
    networks:
      prod:
        aliases:
         - seaweedfs-s3-localnode.tls.ai
    ports:
       - "8333:8333"
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    depends_on:
      - seaweedfs-master
      - seaweedfs-volume
      - seaweedfs-filer

  nginx:
    image: gcr.io/anyvision-training/nginx:19.07
    restart: always
    networks:
      prod:
        aliases:
          - nginx-localnode.tls.ai
    ports:
      - "1935:1935"
      - "443:443"
      #- "80:80"
    volumes:
      - /storage:/opt/nginx/html:ro
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - limit_rate_speed=0
      - aws_host="seaweedfs-s3-localnode.tls.ai:8333"
      - error_log_level=info
      - access_log=on
      - rewrite_log=on
      - default_dns_resolver=127.0.0.11
      - dns_resolver=127.0.0.11
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  certificator:
    image: gcr.io/anyvision-training/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g

  cron:
    image: gcr.io/anyvision-training/supercronic:19.05
    restart: always
    networks:
      prod:
        aliases:
          - cron-localnode.tls.ai
    volumes:
      - /storage:/var/www/html
      - ./crontab/site_crontab:/etc/crontabs/crontab
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TO_DATE_TRACK_DELETE=30
      - API_IP=api.tls.ai 
      - CONSUL_AGENT=consul-agent.tls.ai  
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  rabbitmq:
    image: gcr.io/anyvision-training/rabbitmq:19.05
    restart: always
    hostname: rabbitmq
    networks:
      prod:
        aliases:
          - rabbitmq.tls.ai
    # these ports should be opened only in development mode
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
      - "15671:15671"
    volumes:
      - /storage/rabbitmq:/var/lib/rabbitmq
      - /etc/localtime:/etc/localtime:ro      
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  mongodb:
    image: gcr.io/anyvision-training/mongo:19.06
    restart: always
    networks:
      prod:
        aliases:
          - mongodb.tls.ai
    #ports:
      #- "27017:27017"
    volumes:
      - /ssd/mongo_db_data:/data/db
      - /storage/backup_mongodb:/backup
      - /etc/localtime:/etc/localtime:ro          
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  redis:
    image: gcr.io/anyvision-training/redis:19.08
    restart: always
    networks:
      prod:
        aliases:
          - redis.tls.ai
    sysctls:
      - net.core.somaxconn=511
    volumes:
      - /ssd/redis_db_data:/data:rw
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - env/global.env               
    logging:
      options:
        max-size: 1g



  dante-proxy:
    image: gcr.io/anyvision-training/dante-proxy:19.02
    restart: always
    networks:
      - prod
    ports:
      - "1080:1080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./socks/sockd.conf:/etc/sockd.conf         
    logging:
      options:
        max-size: 1g




  apigateway:
    image: gcr.io/anyvision-training/api-gateway:1.24.0.4
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - apigateway.tls.ai
          - apigateway-localnode.tls.ai
    ports:
      - "9443:9443"
      - "38391:38391"
    volumes:
      - /storage:/var/www/html
      #- api_gateway_keys:/home/user/api-gateway/config/keys
      - /ssd/apigateway/keys:/home/user/api-gateway/config/keys
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /home/anyvision/Projects/API-gateway:/home/user/api-gateway         ### mount your local project directory to the container
    depends_on:
      - redis
    environment:
      - NODE_DEBUG_OPTION=--inspect=0.0.0.0:38391
      - GATEWAY_HOST=apigateway.tls.ai
      - API_HOST=api.tls.ai
      - DASH_API_URL=https://api.tls.ai:5443
      - GATEWAY_SECURE_URL=https://apigateway.tls.ai:9443
      - GATEWAY_URL=http://apigateway.tls.ai:8080
      - REDIS_HOST=redis.tls.ai
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false         
    env_file:
      - env/global.env
      - env/api-gateway.env
    logging:
      options:
        max-size: 1g



  api:
    image: gcr.io/anyvision-training/api:1.24.0.12
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity
    networks:
      prod:
        aliases:
          - api.tls.ai
          - api-localnode.tls.ai
    ports:
      - "5443:5443"
      - "38389:38389"
      - "3000:3000"
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /home/anyvision/Projects/Dash-API:/home/user/Dash-API               ### mount your local project directory to the container
    environment:
      - NODE_DEBUG_OPTION=--inspect=0.0.0.0:38389
      - API_IP=api.tls.ai
      - MONGO_DB_IP=mongodb.tls.ai
      - CA_HOST=apigateway.tls.ai
      - MASS_IMPORT_IP=reid-localnode.tls.ai          ### use this configuration to configure localhost reid service
      - RMQ_API_HOST=amqp://rabbitmq.tls.ai:5672
      - RUN_AS_USER=node
      - ENABLE_CHOWN=false
      - REID_IP=reid-localnode.tls.ai          ### use this configuration to configure localhost reid service
      - TRACK_ARCHIVE_IP=reid-localnode.tls.ai 
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g



  backend:
    image: gcr.io/anyvision-training/backend-pyconcrete:1.24.0.8
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    depends_on:
      - memsql
    networks:
      prod:
        aliases:
          - edge-localnode.tls.ai
          - reid-localnode.tls.ai
          - arch-localnode.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master-localnode.tls.ai:1.1.1.1"
    ports:
      - "9068:9068"
      - "9069:9069"
      - "9022:9022" #ssh
      - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    volumes:
      - /ssd/license:/home/user/license:ro
      - /ssd/pipe_data:/root/pipe_data
      #- /ssd/track_archive_service_data:/root/track_archive_service_data
      - /ssd/reid_service_data:/root/reid_service_data
      - /storage:/var/www/html
      #- /dev:/dev:rw       ## FOR ACCESSING DEVICES - HOT-PLUGGABLE
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      #- /root/backend_trunk:/root/backend_trunk                             ### mount your local project directory to the container
    environment:
      - ENABLE_OPENSSH_SERVICE=true
      - BACKEND_OPENSSH_PORT=9022
      - DISPLAY=${DISPLAY:-:1}                                               ### local display mode - do not forget to run "xhost +" as your local host user (not as root)
      - external_ip=edge-localnode.tls.ai
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
      - frame_store_rtmp_url=rtstreamer.tls.ai
      - frame_store_rtmp_port=80
      - misc_gpu_encoding=true
      - memsql_host=memsql.tls.ai
      - memsql_port=3306
      - DB_HOST=memsql.tls.ai
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=reid_db
      - prometheus_gateway_ip=monitor_pushgateway_1
      - ENABLE_MONITORING=false
    env_file:
      - env/global.env
      - env/backend.env
    logging:
      options:
        max-size: 1g
    ipc: host   
    working_dir: /root/backend_trunk
    #entrypoint: sleep 1d
    entrypoint: ["/bin/containerpilot","-config","/etc/containerpilot.json5"]


  collate:
    image: gcr.io/anyvision-training/backend:1.24.0.8
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    depends_on:
      - memsql
    networks:
      prod:
        aliases:
          - coll-localnode.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master-localnode.tls.ai:1.1.1.1"
    ports:
      - "9067:9067"                                           
    volumes:
      - /ssd/license:/home/user/license:ro
      - /ssd/pipe_data:/root/pipe_data
      - /ssd/reid_service_data:/root/reid_service_data
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_OPENSSH_SERVICE=true
      - BACKEND_OPENSSH_PORT=9022
      - DISPLAY=${DISPLAY:-:1}                                               
      - external_ip=edge-localnode.tls.ai
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
      - frame_store_rtmp_url=rtstreamer.tls.ai
      - frame_store_rtmp_port=80
      - misc_gpu_encoding=true
      - memsql_host=memsql.tls.ai
      - memsql_port=3306
      - DB_HOST=memsql.tls.ai
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=reid_db
      - prometheus_gateway_ip=monitor_pushgateway_1
      - ENABLE_MONITORING=false
    env_file:
      - env/global.env
      - env/collate.env
    logging:
      options:
        max-size: 1g
    ipc: host   
    working_dir: /root/backend_trunk
    #entrypoint: sleep 1d
    entrypoint: ["/bin/containerpilot","-config","/etc/containerpilot.json5"]   

  edge:
    image: gcr.io/anyvision-training/backend-pyconcrete:1.24.0.8
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    depends_on:
      - memsql
    networks:
      prod:
        aliases:
          - edge-localnode.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master-localnode.tls.ai:1.1.1.1"
    ports:
      - "4005:4005"                                           
    volumes:
      - /ssd/license:/home/user/license:ro
      - /ssd/pipe_data:/root/pipe_data
      - /ssd/reid_service_data:/root/reid_service_data
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_OPENSSH_SERVICE=true
      - BACKEND_OPENSSH_PORT=9022
      - DISPLAY=${DISPLAY:-:1}                                               
      - external_ip=edge-localnode.tls.ai
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
      - frame_store_rtmp_url=rtstreamer.tls.ai
      - frame_store_rtmp_port=80
      - misc_gpu_encoding=true
      - memsql_host=memsql.tls.ai
      - memsql_port=3306
      - DB_HOST=memsql.tls.ai
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=reid_db
      - prometheus_gateway_ip=monitor_pushgateway_1
      - ENABLE_MONITORING=false
    env_file:
      - env/global.env
      - env/edge.env
    logging:
      options:
        max-size: 1g
    ipc: host   
    working_dir: /root/backend_trunk
    #entrypoint: sleep 1d
    entrypoint: ["/bin/containerpilot","-config","/etc/containerpilot.json5"]   

  
  broadcaster:
    image: gcr.io/anyvision-training/broadcaster:1.24.0.0
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: broadcaster
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - broadcaster.tls.ai
    #ports:
    #  - "38392:38392"
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - api
    environment:
      - NODE_DEBUG_OPTION=--inspect=0.0.0.0:38392
      - api_service_ip=api.tls.ai
      - BCAST_SOCKETIO_API_URL=https://api.tls.ai:5443
      - RUN_AS_USER=user
      #- ENABLE_DOCKERIZE=false
      - ENABLE_CHOWN=false     
    env_file:
      - env/global.env
      - env/broadcaster.env
    logging:
      options:
        max-size: 1g

  dslr-dashboard-bt:
    image: gcr.io/anyvision-training/dslr-dashboard-bt:1.24.0.0
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: dslr-dashboard-bt
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - dslr-dashboard-bt.tls.ai
    ports:
      - "38392:38392"
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NODE_DEBUG_OPTION=--inspect=0.0.0.0:38392
      #- ENABLE_DOCKERIZE=false
      - ENABLE_CHOWN=false     
    env_file:
      - env/global.env
      - env/broadcaster.env
    logging:
      options:
        max-size: 1g


  master-sync-service:
    image: gcr.io/anyvision-training/master-sync-service:1.1.4.0
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: master-sync-service
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    #those port should be opened only development mode
    #ports:
    #  - "16180:16180"
    networks:
      prod:
        aliases:
          - master-sync-service.tls.ai
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - api
    environment:
      #- ENABLE_DOCKERIZE=false
      - ENABLE_CHOWN=false
      - RUN_AS_USER=user
    env_file:
      - env/global.env
      - env/master-sync-service.env
    logging:
      options:
        max-size: 1g

  push-notification:
     image: gcr.io/anyvision-training/push-notification-service:1.24.0.0
     restart: always
     #command: --disable-services --no-exitkills --debug sleep infinity
     networks:
       prod:
         aliases:
         - push-notification.tls.ai
     ports:
     - "7443:7443"
     volumes:
     - /storage:/var/www/html
     - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
     - /etc/localtime:/etc/localtime:ro
     environment:
     - FIREBASE_ADMIN_TOKEN=AAAA
     - RUN_AS_USER=user
     - ENABLE_CHOWN=false
     - RMQ_API_USER=user
     - RMQ_API_PASS=password
     - MONGO_DB_NAME=push-notifications
     - MONGO_DB_IP=mongodb.tls.ai
     - RMQ_API_HOST=amqp://rabbitmq.tls.ai:5672
     env_file:
     - env/global.env
     logging:
       options:
         max-size: 1g



  # dashboard-updater:
  #   image: gcr.io/anyvision-training/dashboard-updater:latest
  #   restart: always
  #   networks:
  #     - prod
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - /ssd/dashboards:/opt/nginx/html:rw
  #     - /etc/localtime:/etc/localtime:ro
  #   environment:
  #     - limit_rate_speed=0
  #     - DASHBOARD_VERSION=1.20.0
  #     - ENABLE_FETCHER=false
  #     - ENABLE_NGINX=true
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g



  docker-hoster:
    image: gcr.io/anyvision-training/docker-hoster
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hosts:/tmp/hosts
    logging:
      options:
        max-size: 1g
