#filename: docker-compose-win-cpu.yml
version: '3.3'


volumes:
  redis_db_data:
  api_gateway_keys:


networks:
  prod:
    ipam:
      driver: default
      config:
      -
        subnet: 172.30.30.0/24

services:


  node-rtsp-rtmp-server:
    image: gcr.io/anyvision-production/node-rtsp-rtmp-server
    restart: always
    networks:
      - prod
    # ports:
    #   - "80:80"
    #   - "1935:1935"
    logging:
      options:
        max-size: 1g



  webrtc-streamer:
    image: gcr.io/anyvision-production/webrtc-streamer:1.23.0.3
    restart: always
    networks:
      prod:
        aliases:
          - webrtc-localnode.tls.ai
    ports:
      - "8000:8000"
    volumes:
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - HOST_IP=${HOST_IP}
      - WEBRTC_STREAMER_OPTIONS=-nDefault -urtsp://184.72.239.149/vod/mp4:BigBuckBunny_175k.mov -H0.0.0.0:8000s -scoturn-localnode.tls.ai:3478 -twebrtc:webrtc@coturn-localnode.tls.ai:3478 -w/webrtc-streamer/html -c/usr/local/share/ca-certificates/tls.ai/tls.ai.full.with.key.pem
    logging:
      options:
        max-size: 1g



  coturn:
    image: gcr.io/anyvision-production/coturn:latest
    restart: always
    networks:
      prod:
        aliases:
          - coturn-localnode.tls.ai
    ports:
      - "3478:3478"
      - "49160-49260:49160-49260/udp"
    volumes:
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - HOST_IP=${HOST_IP}
    command: -v -n --log-file=stdout --min-port=49160 --max-port=49260 --no-stun --no-multicast-peers --no-loopback-peers --fingerprint --external-ip=${HOST_IP} --user webrtc:webrtc --lt-cred-mech --realm tls.ai --cert /usr/local/share/ca-certificates/tls.ai/tls.ai.full.pem --pkey /usr/local/share/ca-certificates/tls.ai/tls.ai.key
    logging:
      options:
        max-size: 1g



  seaweedfs-master:
    image: gcr.io/anyvision-production/seaweedfs:1.10
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-master-localnode.tls.ai
   # ports:
   #   - 9333:9333
    environment:
      - SEAWEEDFS_MASTER=1
      - SEAWEEDFS_MASTER_PORT=9333
      - SEAWEEDFS_MASTER_CMD=-port=9333 -ip=seaweedfs-master-localnode.tls.ai -mdir=/data -peers=seaweedfs-master-localnode.tls.ai:9333
    volumes:
      - c:/anv/storage/seaweed-master:/data
    logging:
      options:
        max-size: 1g



  seaweedfs-volume:
    image: gcr.io/anyvision-production/seaweedfs:1.10
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-volume-localnode.tls.ai
    environment:
      - SEAWEEDFS_VOLUME=1
      - SEAWEEDFS_VOLUME_PORT=8080
      - SEAWEEDFS_VOLUME_CMD=-port=8080 -ip=seaweedfs-volume-localnode.tls.ai -index=memory -max=100000 -mserver=seaweedfs-master-localnode.tls.ai:9333 -dir=/data
    volumes:
      - c:/anv/storage/seaweed:/data
    logging:
      options:
        max-size: 1g



  seaweedfs-filer:
    image: gcr.io/anyvision-production/seaweedfs:1.10
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-filer-localnode.tls.ai
    ports:
       - 8888:8888
    depends_on:
      - seaweedfs-master
    environment:
      - SEAWEEDFS_FILER=1
      - SEAWEEDFS_FILER_PORT=8888
      - SEAWEEDFS_FILER_CMD=-ip=seaweedfs-filer-localnode.tls.ai -master=seaweedfs-master-localnode.tls.ai:9333
    logging:
      options:
        max-size: 1g



  seaweedfs-s3:
    image: gcr.io/anyvision-production/seaweedfs:1.10
    restart: always
    networks:
      prod:
        aliases:
         - seaweedfs-s3-localnode.tls.ai
    ports:
       - 8333:8333
    depends_on:
      - seaweedfs-master
    environment:
      - SEAWEEDFS_S3=1
      - SEAWEEDFS_S3_PORT=8333
      #- SEAWEEDFS_S3_CMD=-port=8333 -domainName=tls.ai -filer=seaweedfs-filer-localnode.tls.ai:8888 -filer.grpcPort=18888 -filer.dir.buckets=/buckets
      - SEAWEEDFS_S3_CMD=-port=8333 -filer=seaweedfs-filer-localnode.tls.ai:8888 -filer.grpcPort=18888 -filer.dir.buckets=/buckets
    logging:
      options:
        max-size: 1g



  consul:
    image: gcr.io/anyvision-production/consul:1.4.0
    restart: always
    command: agent -server -client=0.0.0.0 -bootstrap -ui -datacenter=${SITE_NAME:-dc1}
    networks:
      prod:
        aliases:
        - consul.tls.ai
    ports:
      - "8500:8500"
    volumes:
      - consul_data:/data
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  consul-agent:
    image: gcr.io/anyvision-production/consul-agent:1.4.0
    restart: always
    networks:
      prod:
        aliases:
          - consul-agent.tls.ai
    volumes:
      - consul_agent_data:/data
      #- /etc/hostname:/etc/host_hostname:ro
    environment:
      - SITE_NAME=dc1
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  nginx:
    image: gcr.io/anyvision-production/nginx:18.12
    restart: always
    networks:
      prod:
        aliases:
          - nginx-localnode.tls.ai
    ports:
      - "1935:1935"
      - "443:443"
      #- "80:80"
    volumes:
      - c:/anv/storage:/opt/nginx/html:ro
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - limit_rate_speed=0
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  cron:
    image: gcr.io/anyvision-production/supercronic:18.12
    restart: always
    networks:
      prod:
        aliases:
          - cron-localnode.tls.ai
    volumes:
      - c:/anv/storage:/var/www/html
      - ./crontab/site_crontab:/etc/crontabs/crontab
    environment:
      - TO_DATE_TRACK_DELETE=30
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  rabbitmq:
    image: gcr.io/anyvision-production/rabbitmq:18.12
    restart: always
    networks:
      prod:
        aliases:
          - rabbitmq.tls.ai
    # these ports should be opened only in development mode
    # ports:
    #   - "5671:5671"
    #   - "5672:5672"
    #   - "15672:15672"
    #   - "15671:15671"
    volumes:
      - c:/anv/storage/rabbitmq:/var/lib/rabbitmq
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  mongodb:
    image: gcr.io/anyvision-production/mongo:18.12
    restart: always
    networks:
      prod:
        aliases:
          - mongodb.tls.ai
    # ports:
    #   - "27017:27017"
    volumes:
      - /ssd/mongo_db_data:/data/db
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  redis:
    image: gcr.io/anyvision-production/redis:18.12
    restart: always
    networks:
      prod:
        aliases:
          - redis.tls.ai
    sysctls:
      - net.core.somaxconn=511
    volumes:
      - redis_db_data:/data:rw
    logging:
      options:
        max-size: 1g



  broadcaster:
    image: gcr.io/anyvision-production/broadcaster:1.23.0.3
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: broadcaster
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - broadcaster.tls.ai
    ports:
      - "38392:38392"
    volumes:
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    depends_on:
      - api
    environment:
      - api_service_ip=api.tls.ai
      - BCAST_SOCKETIO_API_URL=https://api.tls.ai:5443
      - RUN_AS_USER=user
      #- ENABLE_DOCKERIZE=false
      #- ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/broadcaster.env
    logging:
      options:
        max-size: 1g


#  master-sync-service:
#    image: gcr.io/anyvision-production/master-sync-service:development
#    restart: always
#    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
#    hostname: master-sync-service
#    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
#    networks:
#      prod:
#        aliases:
#          - master-sync-service.tls.ai
#    volumes:
#      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
#    depends_on:
#      - api
#    environment:
#      #- ENABLE_DOCKERIZE=false
#      #- ENABLE_CHOWN=false
#    env_file:
#      - env/global.env
#      - env/master-sync-service.env
#    logging:
#      options:
#        max-size: 1g



  apigateway:
    image: gcr.io/anyvision-production/api-gateway:development
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - apigateway.tls.ai
          - apigateway-localnode.tls.ai
    ports:
      - "9443:9443"
      - "38391:38391"
    volumes:
      - c:/anv/storage:/var/www/html
      - api_gateway_keys:/home/user/api-gateway/config/keys
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    depends_on:
      - redis
    environment:
      - GATEWAY_HOST=apigateway.tls.ai
      - API_HOST=api.tls.ai
      - DASH_API_URL=https://api.tls.ai:5443
      - GATEWAY_SECURE_URL=https://apigateway.tls.ai:9443
      - GATEWAY_URL=http://apigateway.tls.ai:8080
      - REDIS_HOST=redis.tls.ai
      - RUN_AS_USER=user
      #- ENABLE_CHOWN=false
    env_file:
      - env/api-gateway.env
      - env/global.env
    logging:
      options:
        max-size: 1g



  api:
    image: gcr.io/anyvision-production/api:1.23.0.3
    restart: always
    networks:
      prod:
        aliases:
          - api.tls.ai
          - api-localnode.tls.ai
    ports:
      - "5443:5443"
      - "3000:3000"
      - "38389:38389"
    volumes:
      - c:/anv/storage:/var/www/html
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - API_IP=api.tls.ai
      - MONGO_DB_IP=mongodb.tls.ai
      - CA_HOST=apigateway.tls.ai
      - MASS_IMPORT_IP=reid-localnode.tls.ai          ### use this configuration to configure localhost reid service
      - RUN_AS_USER=user
      #- ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g



  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g



  backend:
    image: gcr.io/anyvision-production/backend-cpu:development
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    networks:
      prod:
        aliases:
          - proc-localnode.tls.ai
          - reid-localnode.tls.ai
          - coll-localnode.tls.ai
          - arch-localnode.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master-localnode.tls.ai:1.1.1.1"
    ports:
      #- "4005:4005"
      #- "9067:9067"
      #- "9068:9068"
      #- "9069:9069"
      #- "9022:9022" #ssh
      - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    volumes:
      - c:/anv/home/user/license:/home/user/license:ro
      - c:/anv/storage/backend_data:/root/pipe_data
      - c:/anv/storage/track_archive_service_data:/root/track_archive_service_data
      - c:/anv/storage:/var/www/html
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - misc_pipe_cpu_mode=true
      - NVIDIA_VISIBLE_DEVICES=
      - NVIDIA_DRIVER_CAPABILITIES=
      - DISPLAY=10.0.75.1:0.0
      - external_ip=proc-localnode.tls.ai
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
    env_file:
      - env/backend.env
      - env/global.env
    logging:
      options:
        max-size: 1g
    ipc: host



  dante-proxy:
    image: gcr.io/anyvision-production/dante-proxy
    restart: always
    networks:
      - prod
    ports:
      - "1080:1080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./socks/sockd.conf:/etc/sockd.conf
    logging:
      options:
        max-size: 1g



  # dashboard-updater:
  #   image: gcr.io/anyvision-production/dashboard-updater:latest
  #   restart: always
  #   networks:
  #     - prod
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - c:/anv/storage/dashboards:/opt/nginx/html:rw
  #     #- /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   environment:
  #     - limit_rate_speed=0
  #     - DASHBOARD_VERSION=${TAG_NAME}
  #     - ENABLE_FETCHER=false
  #     - ENABLE_NGINX=true
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g
