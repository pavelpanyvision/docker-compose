#filename: docker-compose-swarm-mgmt.yml
version: '3.3'


volumes:
  consul:


networks:
  prod:
    external: true
  proxy:
    external: true
#  consul:
#    external: true


secrets:
  anv_cert:
    file: ./tls/apigateway.anyvision.local.crt
  anv_key:
    file: ./tls/apigateway.anyvision.local.key.pem
  anv_ca:
    file: ./tls/anyvisionCA.pem
  anv_full:
    file: ./tls/apigateway.anyvision.local.full.pem
  anv_csr:
    file: ./tls/apigateway.anyvision.local.csr
  passinfo:
    file: ./tls/passinfo


services:


  traefik:
    image: traefik
    networks:
      - proxy
    ports:
      - "80:80"
      - "8080:80"
      #- "27017:80"
      - "443:443"
      - "9443:443"
      #- "5443:443"
      #- "4005:443"
      #- "9067:443"
      #- "9068:443"
      #- "9069:443"
      - "8081:8080"
    command:
      - "--api"
      - "--entrypoints=Name:http Address::80"
      #- "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS:/run/secrets/cert.pem,/run/secrets/key.pem"
      #- "--defaultentrypoints=http,https"
      - "--defaultentrypoints=http"
      - "--InsecureSkipVerify"
      - "--docker"
      - "--docker.domain=anyvision.local"
      - "--docker.swarmMode=true"
      - "--docker.watch=true"
      - "--docker.exposedByDefault=false"
      #- "--docker.endpoint=unix://var/run/docker.sock"
      #- "--docker.tls.insecureSkipVerify"
      - "--logLevel=DEBUG"
    secrets:
      - source: anv_cert
        target: cert.pem
        uid: "0"
        mode: 400
      - source: anv_key
        target: key.pem
        uid: "0"
        mode: 400
      - source: anv_ca
        target: ca.pem
        uid: "0"
        mode: 400
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  consul:
    image: consul:1.2.1
    volumes:
      - consul:/consul
    ports:
      - "8500:8500"
    networks:
      prod:
        aliases:
          - consul.cluster
    environment:
      - 'CONSUL_LOCAL_CONFIG={ "skip_leave_on_interrupt": true, "leave_on_terminate": true, "datacenter":"dc1", "data_dir":"/consul/data", "server":true }'
      - CONSUL_BIND_INTERFACE=eth0
      #- CONSUL_BIND_ADDRESS=0.0.0.0
    command: agent -ui -data-dir /consul/data -server -client 0.0.0.0 -bootstrap-expect=1 -retry-join consul.cluster
    deploy:
#      endpoint_mode: dnsrr
      mode: global
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



#  api-master:
#    image: gcr.io/anyvision-training/api-master:development
#    networks:
#      prod:
#        aliases:
#          - api-master.anyvision.local
#      - proxy
#    #dns: 172.14.0.1  ### internal DNS server address, replace this with external IP of CoreDNS/Consul server (A/B config)
#    volumes:
#      - /storage:/var/www/html
#      - /usr/local/share/ca-certificates/anyvision:/usr/local/share/ca-certificates/anyvision
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/timezone:/etc/timezone:ro
#    environment:
#      - RUN_AS_USER=user
#      - ENABLE_CHOWN=false
#      #- TZ=Etc/UTC    ## DO NOT CHANGE
#    env_file:
#      - env/global.env
#      - env/api-master.env
#    logging:
#      options:
#        max-size: 1g
#    deploy:
#      mode: replicated
#      replicas: 1
#      # placement:
#      #   constraints:
#      #     - node.role == manager
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 10
#        window: 120s
