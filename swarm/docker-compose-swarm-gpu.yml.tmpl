version: '3.3'

volumes:
  mongo_db_data:
  redis_db_data:
  backend_data:
  api_gateway_keys:

### create prod overlay network: docker network create -d overlay --attachable prod
### create proxy overlay network: docker network create -d overlay --attachable proxy


networks:
  prod:
    external: true
  proxy:
    external: true


configs:
  {{'default' | env('SITE_NAME')}}_guacamole_mapping:
    file: ./guacamole/user-mapping-cloud.xml


# secrets:
#   anv_cert:
#     file: ./tls/cert.pem
#   anv_key:
#     file: ./tls/key.pem
#   anv_ca:
#     file: ./tls/ca.pem


services:


#  registrator:
#    image: gliderlabs/registrator
#    command: ["consul://consul-bootstrap:8500"]
#    networks:
#      - proxy
#      - prod
#    volumes:
#      - /var/run/docker.sock:/tmp/docker.sock
#    logging:
#      options:
#        max-size: 1g
#    deploy:
#      mode: replicated
#      replicas: 1
#      placement:
#        constraints:
#          - node.labels.site=={{'default' | env('SITE_NAME')}}
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 10
#        window: 120s



  guacamole:
    image: gcr.io/anyvision-training/guacamole:0.9.14
    networks:
      proxy:
      prod:
        aliases:
         - guacamole-{{'default' | env('SITE_NAME')}}.anyvision.local
    #ports:
      #- "8080:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    configs:
      - source: {{'default' | env('SITE_NAME')}}_guacamole_mapping
        target: /etc/guacamole/user-mapping.xml
        mode: 444
    #secrets:
    #  - source: anv_cert
    #    target: cert.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_key
    #    target: key.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_ca
    #    target: ca.pem
    #    uid: "0"
    #    mode: 400
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
      labels:
        - traefik.frontend.rule=PathPrefixStrip:/{{'default' | env('SITE_NAME')}}/
        - traefik.docker.network=proxy
        - traefik.port=8080
        - traefik.enable=true



  sftp:
    image: atmoz/sftp
    networks:
      prod:
        aliases:
          - sftp-{{'default' | env('SITE_NAME')}}.anyvision.local
    volumes:
      - /storage/sftp_data:/home/user
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    command: user:pass:2000:2000:files
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  nginx:
    image: gcr.io/anyvision-training/nginx-rtmp:ssl
    networks:
      proxy:
      prod:
        aliases:
         - nginx-{{'default' | env('SITE_NAME')}}.anyvision.local
    #ports:
      #- "1935:1935"
      #- "443:443"
      #- "80:80"
    volumes:
      - /storage:/opt/nginx/html:ro
      - /usr/local/share/ca-certificates/anyvision:/usr/local/share/ca-certificates/anyvision
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    #secrets:
    #  - source: anv_cert
    #    target: cert.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_key
    #    target: key.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_ca
    #    target: ca.pem
    #    uid: "0"
    #    mode: 400
    environment:
      - limit_rate_speed=0
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  desktop:
    image: gcr.io/anyvision-training/desktop
    networks:
      prod:
        aliases:
          - desktop-{{'default' | env('SITE_NAME')}}.anyvision.local
    volumes:
      - /storage/sftp_data:/sftp:ro
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - DISPLAY=:0
      - VNC_OPTIONS=-auth /home/user/.Xauthority -nodpms -noxdamage -shared -forever -passwd 123456 -rfbport 5900 -display :0 -noshm
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  cron:
    image: gcr.io/anyvision-training/supercronic:latest
    networks:
      prod:
        aliases:
          - cron-{{'default' | env('SITE_NAME')}}.anyvision.local
    volumes:
      - /storage:/var/www/html
      - /storage/crontab:/etc/crontab
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - TO_DATE_TRACK_DELETE=30
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  rabbitmq:
    image: gcr.io/anyvision-training/rabbitmq:latest
    networks:
      prod:
        aliases:
          - rabbitmq-{{'default' | env('SITE_NAME')}}.anyvision.local
    #ports:
      #- "5761:5761"
      #- "15761:15761"
    volumes:
      - /storage/rabbitmq:/var/lib/rabbitmq
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  mongodb:
    image: gcr.io/anyvision-training/mongo:3.6-jessie
    networks:
      prod:
        aliases:
          - mongodb-{{'default' | env('SITE_NAME')}}.anyvision.local
    #ports:
      #- "27017:27017"
    volumes:
      - mongo_db_data:/data/db
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  redis:
    image: gcr.io/anyvision-training/redis:latest
    networks:
      prod:
        aliases:
          - redis-{{'default' | env('SITE_NAME')}}.anyvision.local
    volumes:
      - redis_db_data:/data:rw
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  broadcaster:
    image: gcr.io/anyvision-training/broadcaster:1.19.2
    hostname: broadcaster
    networks:
      proxy:
      prod:
        aliases:
          - broadcaster-{{'default' | env('SITE_NAME')}}.anyvision.local
    volumes:
      - /usr/local/share/ca-certificates/anyvision:/usr/local/share/ca-certificates/anyvision
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    #secrets:
    #  - source: anv_cert
    #    target: cert.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_key
    #    target: key.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_ca
    #    target: ca.pem
    #    uid: "0"
    #    mode: 400
    depends_on:
      - api
    environment:
      - api_service_ip=api-{{'default' | env('SITE_NAME')}}.anyvision.local
      - BCAST_SOCKETIO_API_URL="https://apigateway-{{'default' | env('SITE_NAME')}}.anyvision.local:5443"
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/broadcaster.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  apigateway:
    image: gcr.io/anyvision-training/api-gateway:1.19.2
    networks:
      proxy:
      prod:
        aliases:
          - apigateway-{{'default' | env('SITE_NAME')}}.anyvision.local
    #ports:
      #- "9443:9443"
    volumes:
      - /storage:/var/www/html
      - api_gateway_keys:/home/user/api-gateway/config/keys
      - /usr/local/share/ca-certificates/anyvision:/usr/local/share/ca-certificates/anyvision
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    #secrets:
    #  - source: anv_cert
    #    target: cert.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_key
    #    target: key.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_ca
    #    target: ca.pem
    #    uid: "0"
    #    mode: 400
    depends_on:
      - redis
    environment:
      - GATEWAY_HOST=apigateway-{{'default' | env('SITE_NAME')}}.anyvision.local
      - API_HOST=api-{{'default' | env('SITE_NAME')}}.anyvision.local
      - DASH_API_URL=https://api-{{'default' | env('SITE_NAME')}}.anyvision.local:5443
      - GATEWAY_SECURE_URL=https://apigateway-{{'default' | env('SITE_NAME')}}.anyvision.local:9443
      - GATEWAY_URL=http://apigateway-{{'default' | env('SITE_NAME')}}.anyvision.local:8080
      - REDIS_HOST=redis-{{'default' | env('SITE_NAME')}}.anyvision.local
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false
    env_file:
      - env/api-gateway.env
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  api:
    image: gcr.io/anyvision-training/api:1.19.2
    networks:
      proxy:
      prod:
        aliases:
          - api-{{'default' | env('SITE_NAME')}}.anyvision.local
    #ports:
      #- "5443:5443"
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates/anyvision:/usr/local/share/ca-certificates/anyvision
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    #secrets:
    #  - source: anv_cert
    #    target: cert.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_key
    #    target: key.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_ca
    #    target: ca.pem
    #    uid: "0"
    #    mode: 400
    environment:
      - API_IP=api-{{'default' | env('SITE_NAME')}}.anyvision.local
      - MONGO_DB_IP=mongodb-{{'default' | env('SITE_NAME')}}.anyvision.local
      - CA_HOST=apigateway-{{'default' | env('SITE_NAME')}}.anyvision.local
      - MASS_IMPORT_IP=reid-{{'default' | env('SITE_NAME')}}.anyvision.local
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s



  backend:
    image: gcr.io/anyvision-training/backend-pyconcrete:1.19.2
    networks:
      prod:
        aliases:
          - proc-{{'default' | env('SITE_NAME')}}.anyvision.local
          - reid-{{'default' | env('SITE_NAME')}}.anyvision.local
          - coll-{{'default' | env('SITE_NAME')}}.anyvision.local
          - arch-{{'default' | env('SITE_NAME')}}.anyvision.local
    #ports:
      #- "4005:4005"
      #- "9067:9067"
      #- "9068:9068"
      #- "9069:9069"
      #- "5000-5025:5000-5025/udp"                                            ### for remote VMS rtsp connections
    volumes:
      - /home/user/license:/home/user/license:ro
      - backend_data:/root/pipe_data
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates/anyvision:/usr/local/share/ca-certificates/anyvision
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    #secrets:
    #  - source: anv_cert
    #    target: cert.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_key
    #    target: key.pem
    #    uid: "0"
    #    mode: 400
    #  - source: anv_ca
    #    target: ca.pem
    #    uid: "0"
    #    mode: 400
    environment:
      - DISPLAY=:0
      - external_ip=proc-{{'default' | env('SITE_NAME')}}.anyvision.local
      - storage_ip=nginx-{{'default' | env('SITE_NAME')}}.anyvision.local
      - frame_store_storage_ip=nginx-{{'default' | env('SITE_NAME')}}.anyvision.local
      - redis_host=127.0.0.1
      - api_service_ip=api-{{'default' | env('SITE_NAME')}}.anyvision.local
      - mongodb_host=mongodb-{{'default' | env('SITE_NAME')}}.anyvision.local
      ########################################################################## use the configuration below to configure localhost services
      - reid_service_ip=reid-{{'default' | env('SITE_NAME')}}.anyvision.local
      - collate_service_ip=coll-{{'default' | env('SITE_NAME')}}.anyvision.local
      - track_archive_service_ip=arch-{{'default' | env('SITE_NAME')}}.anyvision.local
      ########################################################################## use the configuration below to configure the "b" server(s) hostname(s) in a/b architecture
      #- reid_service_ip=reid-b.anyvision.local
      #- collate_service_ip=coll-b.anyvision.local
      #- track_archive_service_ip=arch-b.anyvision.local
    env_file:
      - env/backend.env
      - env/global.env
    logging:
      options:
        max-size: 1g
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.site=={{'default' | env('SITE_NAME')}}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s


#  dashboard:
#    image: gcr.io/anyvision-training/dashboard:1.19.2
#    networks:
#      - prod
#    volumes:
#      - /storage/sftp_data:/sftp:rw
#      - /usr/local/share/ca-certificates/anyvision:/usr/local/share/ca-certificates/anyvision:ro
#      - /tmp/.X11-unix:/tmp/.X11-unix:rw
#      - /media:/home/user/media:ro
#      - /storage/share:/home/user/share:rw
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/timezone:/etc/timezone:ro
#    #secrets:
#    #  - source: anv_cert
#    #    target: cert.pem
#    #    uid: "0"
#    #    mode: 400
#    #  - source: anv_key
#    #    target: key.pem
#    #    uid: "0"
#    #    mode: 400
#    #  - source: anv_ca
#    #    target: ca.pem
#    #    uid: "0"
#    #    mode: 400
#    environment:
#      - DISPLAY=:0
#      - ssl=true
#      - GATEWAY_HOST=apigateway-{{'default' | env('SITE_NAME')}}.anyvision.local
#      - RUN_AS_USER=user
#      - ENABLE_CHOWN=false
#    env_file:
#      - env/global.env
#      - env/api-gateway.env
#      - env/dashboard.env
#    logging:
#      options:
#        max-size: 1g
#    deploy:
#      mode: replicated
#      replicas: 1
#      placement:
#        constraints:
#          - node.labels.site=={{'default' | env('SITE_NAME')}}
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 10
#        window: 120s
