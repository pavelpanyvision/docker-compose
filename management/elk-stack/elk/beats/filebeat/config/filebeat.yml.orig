
#==========================  Modules configuration =============================
logging.level: debug
#name: "filebeat-1-d-us-west1-b-2"
name: '${host_name}'
tags: ["${install_type}"]
exclude_files: ['\.gz$']

#processors:
#- add_host_metadata: ~
#    netinfo.enabled: true

    #  - add_cloud_metadata: ~
filebeat.config.prospectors:
  path: /opt/docker-elastic/elk/beats/filebeat/config/*.yml
  reload.enabled: true
  reload.period: 10s

filebeat.modules:

#------------------------------- System Module -------------------------------
- module: system
  # Syslog
  syslog:
    enabled: true
    var.paths: ["/var/log/syslog*"]
  auth:
    enabled: true
    var.paths: ["/var/log/auth.log*"]

#------------------------------- Auditd Module -------------------------------
# Does not look like Auditd is supported in Alpine linux:
# https://github.com/linuxkit/linuxkit/issues/52
- module: auditd
  log:
    enabled: false

#========================== Filebeat autodiscover ==============================
# Autodiscover allows you to detect changes in the system and spawn new modules or inputs as they happen.
filebeat.autodiscover:
# Autodiscover docker containers and parse logs
  providers:
    - type: docker
      templates:
          config:
            - type: docker
              containers.ids:
                - "${data.docker.container.id}"
      processors:
       - add_docker_metadata: ~
    - type: docker
      containers:
        ids:
        - "${data.docker.container.id}"
########  Hagay          ##########
filebeat.message:
- type: detections
  enabled: true

#=========================== Filebeat inputs ==============================
filebeat.inputs:
        #filebeat.prospectors:
#------------------------------ Docker input --------------------------------
#- type: docker
#  enabled: true
#  containers.ids:
#    - "*"
#  paths:
#    - /var/lib/docker/containers/${data.docker.container.id}/*.log
#   json.message_key: log
#   json.add_error_key: true
#   json.keys_under_root: true
  #  exclude_lines: ["^\\s+[\\-`('.|_]"]  # drop asciiart lines
  #  multiline.pattern: "^\t|^[[:space:]]+(at|...)|^Caused by:"
  #  multiline.match: after
  #    processors:
  #      - add_docker_metadata: ~
  #    - add_cloud_metadata: ~
  #    - add_locale: ~

- type: log
  enabled: true
  paths:
    - '/var/lib/docker/containers/*/*.log'
  document_type: docker
  json.message_key: log
  json.keys_under_root: true
  processors:
  - add_docker_metadata: ~
#------------------------------ Log input --------------------------------
# - type: log
#   enabled: true
#   paths:
#     - '/var/lib/docker/containers/*/*.log'
#   json.message_key: log
#   json.add_error_key: true
#   json.keys_under_root: true
#   processors:
#     - add_docker_metadata: ~
#     - add_cloud_metadata: ~
#     - add_locale: ~
#   multiline.pattern: "^\t|^[[:space:]]+(at|...)|^Caused by:"
#   multiline.match: after
#
- type: log
  document_type: apache
  enabled: true
  paths:
    - /opt/api-logs/*.log
  scan_frequency: 5s
  fields:
    api: "anyvision"
      #  include_lines: ['^ERROR', '^WARN']    
      #  fields_under_root: true
      #  multiline.pattern: '^[^\[]|$'
  multiline.pattern: '^[[:space:]]|^}'
  multiline.negate: false
  multiline.match: after


- type: log
  document_type: apache
  enabled: true
  paths:
    - /opt/gateway-logs/*.log
  scan_frequency: 5s
  fields:
    gateway: "anyvision"
      #  include_lines: ['^ERROR', '^WARN']    
      #  fields_under_root: true

- type: log
  enabled: true
  paths:
    - /opt/pipe-logs/*.log
    - /opt/pipe-logs/*/*.log
  scan_frequency: 5s
  fields:
    pipe: "anyvision"
    #  fields_under_root: true  
#   json.message_key: log
#   json.add_error_key: true
#   json.keys_under_root: true
#  multiline.pattern: '^[[:space:]]+|^Caused by:'
#  multiline.pattern: '^[[:space:]]+|^ - (detector) -:'
#  multiline.negate: true
#  multiline.match: after
#  recursive_glob.enabled: true

      #filebeat.prospectors:
      #- type: log
      #  paths:
      #    - /storage/api-logs/*.log

#========================== Elasticsearch output ===============================
     #ths path to jenkins build logs
output.elasticsearch:
  hosts: ["http://elk-server:9200"]
  username: elastic
  password: changeme

xpack.monitoring:
  enabled: true
  elasticsearch:

#============================== Dashboards =====================================
#setup.dashboards:
#  enabled: true
setup.kibana:
  host: ["http://elk-server:5601"]
  username: elastic
  password: changeme#
