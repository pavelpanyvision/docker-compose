#filename: docker-compose-gpu.yml
version: '3.3'

networks:
  prod:
    ipam:
      driver: default
      config:
      -
        subnet: 172.30.30.0/24


services:
  consul:
    image: gcr.io/anyvision-production/consul:18.12
    restart: always
    networks:
      prod:
        aliases:
        - consul.tls.ai
    ports:
      - "8500:8500"
    volumes:
      -  /ssd/consul_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -server -bootstrap -ui
      - CONSUL_SERVER=127.0.0.1
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g


  consul-agent:
    image: gcr.io/anyvision-production/consul:18.12
    restart: always
    networks:
      #host_network:
      prod:
        aliases:
          - consul-agent.tls.ai
    volumes:
      - /ssd/consul_agent_data:/consul/data
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - CMD=agent -rejoin -retry-join consul.tls.ai -retry-max 10 -retry-interval 15s -disable-host-node-id
      - CONSUL_SERVER=consul.tls.ai
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_ADDRESS=0.0.0.0
      - JOB_NAME=consul-agent
      - DATACENTER=dc1
      - SITE_NAME=local
      - RUN_AS_USER=root
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g

  memsql:
    image: gcr.io/anyvision-production/memsql:19.09
    restart: always
    networks:
      prod:
        aliases:
          - memsql.tls.ai
    ports:
      - "3306:3306"
    volumes:
      - /ssd/memsql:/var/lib/memsql
      - /storage/backup_memsql:/backup
    environment:
      - LICENSE_KEY=BDk3ZmFhNGU3YmJmOTQ5N2I5N2RmY2E4ZWEzZTAxYjVlAAAAAAAAAAAAAAIAAAAAAAQwNQIZAJGgtcrXzs18QzlKPsIo5SNnwVxqxH6gEwIYbWq/m+E3/flYcFfIm3ERvsxjtlbaz7O5AA==
      - MEMSQL_NODE_ROLE=AIO
      - MEMSQL_PASSWORD=password
      - AGG_MEMORY_LIMIT=4
      - LEAF_MEMORY_LIMIT=124
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g


  memsql-schema:
    image: gcr.io/anyvision-production/db-migrator:1.24.0-1BT
    restart: "no"
    networks:
      prod:
        aliases:
          - memsql-schema.tls.ai
    environment:
      - DB_HOST=memsql.tls.ai
      - DB_ACTION=update
      - DB=mysql
      - DB_NAME=tracks_db:1.23.0,reid_db:1.24.0
    logging:
      options:
        max-size: 5m
    depends_on:
      - memsql


  seaweedfs-master:
    image: gcr.io/anyvision-production/seaweedfs:1.44
    restart: always
    command: "-v=2 master -ip=seaweedfs-master-localnode.tls.ai -mdir=/data"
    networks:
      prod:
        aliases:
         - seaweedfs-master-localnode.tls.ai
    volumes:
      - /ssd/seaweed-master:/data
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g


  seaweedfs-volume:
    image: gcr.io/anyvision-production/seaweedfs:1.44
    restart: always
    command: '-v=2 volume -max=1000 -ip=seaweedfs-volume-localnode.tls.ai -mserver=seaweedfs-master-localnode.tls.ai:9333 -port=8080 -dir=/data'
    networks:
      prod:
        aliases:
         - seaweedfs-volume-localnode.tls.ai
    volumes:
      - /storage/seaweed:/data
    logging:
      options:
        max-size: 1g
    depends_on:
      - seaweedfs-master


  seaweedfs-filer:
    image: gcr.io/anyvision-production/seaweedfs:1.44
    restart: always
    command: '-v=2 filer -master=seaweedfs-master-localnode.tls.ai:9333 -ip=seaweedfs-filer-localnode.tls.ai'
    networks:
      prod:
        aliases:
         - seaweedfs-filer-localnode.tls.ai
    ports:
       - "8888:8888"
    env_file:
      - env/global.env
    volumes:
      - ./seaweedfs/filer.toml:/etc/seaweedfs/filer.toml
      - /ssd/seaweed-filer:/data/filerldb2
    logging:
      options:
        max-size: 1g
    depends_on:
      - seaweedfs-master
      - seaweedfs-volume


  seaweedfs-s3:
    image: gcr.io/anyvision-production/seaweedfs:1.44
    restart: always
    command: '-v=2 s3 -filer=seaweedfs-filer-localnode.tls.ai:8888 -port=8333 -filer.dir.buckets="/buckets"'
    networks:
      prod:
        aliases:
         - seaweedfs-s3.tls.ai
         - seaweedfs-s3-localnode.tls.ai
    ports:
       - "8333:8333"
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    depends_on:
      - seaweedfs-master
      - seaweedfs-volume
      - seaweedfs-filer


  nginx:
    image: gcr.io/anyvision-production/nginx:19.10
    restart: always
    networks:
      prod:
        aliases:
          - nginx-localnode.tls.ai
    ports:
      - "1935:1935"
      - "443:443"
    volumes:
      - /storage:/opt/nginx/html:ro
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - limit_rate_speed=0
      - aws_host=seaweedfs-s3-localnode.tls.ai:8333
      - error_log_level=info
      - access_log=on
      - rewrite_log=on
      - default_dns_resolver=127.0.0.11
      - dns_resolver=127.0.0.11
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g
    depends_on:
      - seaweedfs-s3


  docker-hoster:
    image: gcr.io/anyvision-production/docker-hoster
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - /etc/hosts:/tmp/hosts
    logging:
      options:
        max-size: 1g


  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g


  mongodb:
    image: gcr.io/anyvision-production/mongo:19.04
    restart: always
    networks:
      prod:
        aliases:
          - mongodb.tls.ai
    volumes:
      - /ssd/mongo_db_data:/data/db
      - /storage/backup_mongodb:/backup
      - /etc/localtime:/etc/localtime:ro          
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g

  api:
    image: gcr.io/anyvision-training/sesame-api:codefresh
    restart: always
    networks:
      prod:
        aliases:
          - api.tls.ai
          - api-localnode.tls.ai
    ports:
      - "5443:5443"
      - "38389:38389"
      - "3000:3000"
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NODE_DEBUG_OPTION=--inspect=0.0.0.0:38389
      - API_IP=api.tls.ai
      - MONGO_DB_IP=mongodb.tls.ai
      - CA_HOST=apigateway.tls.ai
      - MASS_IMPORT_IP=reid-localnode.tls.ai          ### use this configuration to configure localhost reid service
      - RMQ_API_HOST=amqp://rabbitmq.tls.ai:5672
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false
      - REID_IP=reid-localnode.tls.ai        
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g


  backend:
    image: gcr.io/anyvision-production/backend-pyconcrete:on-demand-cpu-mode
    entrypoint: ["/bin/containerpilot","-config","/etc/containerpilot.json5"]
    restart: always
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    depends_on:
      - memsql
    networks:
      prod:
        aliases:
          - proc-localnode.tls.ai
          - reid-localnode.tls.ai
          - coll-localnode.tls.ai
          - arch-localnode.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master-localnode.tls.ai:1.1.1.1"
    ports:
      - "4005:4005"
      - "9067:9067"
      - "9068:9068"
      - "9069:9069"
      - "9022:9022" #ssh
      - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    volumes:
      - /ssd/license:/home/user/license:ro
      - /ssd/pipe_data:/root/pipe_data
      - /ssd/reid_service_data:/root/reid_service_data
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      - misc_pipe_cpu_mode=true
      - misc_gpu_encoding=false  
      - ENABLE_OPENSSH_SERVICE=true
      - BACKEND_OPENSSH_PORT=9022
      - DISPLAY=${DISPLAY:-:1}                                               ### local display mode - do not forget to run "xhost +" as your local host user (not as root)
      - external_ip=proc-localnode.tls.ai
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
      - frame_store_rtmp_url=rtstreamer.tls.ai
      - frame_store_rtmp_port=80
      - memsql_host=memsql.tls.ai
      - memsql_port=3306
      - DB_HOST=memsql.tls.ai
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=reid_db
      - prometheus_gateway_ip=monitor_pushgateway_1
      - ENABLE_MONITORING=false
    env_file:
      - env/global.env
      - env/backend.env
    logging:
      options:
        max-size: 1g
    ipc: host


