#filename: docker-compose-local-win-cpu.yml
version: '3.3'


volumes:
  redis_db_data:
  api_gateway_keys:


networks:
  prod:


services:


  nginx:
    image: gcr.io/anyvision-production/nginx:tls.ai
    restart: always
    networks:
      prod:
        aliases:
          - nginx-localnode.tls.ai
    ports:
      - "1935:1935"
      - "443:443"
      #- "80:80"
    volumes:
      - c:/anv/storage:/opt/nginx/html:ro
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - limit_rate_speed=0
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  cron:
    image: gcr.io/anyvision-production/supercronic:alpine
    restart: always
    networks:
      prod:
        aliases:
          - cron-localnode.tls.ai
    volumes:
      - c:/anv/storage:/var/www/html
      - ./crontab/site_crontab:/etc/crontabs/crontab
    environment:
      - TO_DATE_TRACK_DELETE=30
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  rabbitmq:
    image: gcr.io/anyvision-production/rabbitmq:latest
    restart: always
    networks:
      prod:
        aliases:
          - rabbitmq.tls.ai
    # these ports should be opened only in development mode
    #ports:
      #- "5671:5671"
      #- "5672:5672"
      #- "15672:15672"
      #- "15671:15671"
    volumes:
      - c:/anv/storage/rabbitmq:/var/lib/rabbitmq
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  mongodb:
    image: gcr.io/anyvision-production/mongo:3.6-jessie
    restart: always
    networks:
      prod:
        aliases:
          - mongodb.tls.ai
    #ports:
      #- "27017:27017"
    volumes:
      - /ssd/mongo_db_data:/data/db
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  redis:
    image: gcr.io/anyvision-production/redis:latest
    restart: always
    networks:
      prod:
        aliases:
          - redis.tls.ai
    sysctls:
      - net.core.somaxconn=511
    volumes:
      - redis_db_data:/data:rw
    logging:
      options:
        max-size: 1g



  broadcaster:
    image: gcr.io/anyvision-production/broadcaster:development
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: broadcaster
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - broadcaster.tls.ai
    volumes:
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    depends_on:
      - api
    environment:
      - api_service_ip=api.tls.ai
      - BCAST_SOCKETIO_API_URL=https://api.tls.ai:5443
      - RUN_AS_USER=user
      #- ENABLE_DOCKERIZE=false
      #- ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/broadcaster.env
    logging:
      options:
        max-size: 1g


  master-sync-service:
    image: gcr.io/anyvision-production/master-sync-service:development
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: master-sync-service
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - master-sync-service.tls.ai
    volumes:
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    depends_on:
      - api
    environment:
      #- ENABLE_DOCKERIZE=false
      #- ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/master-sync-service.env
    logging:
      options:
        max-size: 1g



  apigateway:
    image: gcr.io/anyvision-production/api-gateway:1.20.2-rc.1
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      prod:
        aliases:
          - apigateway.tls.ai
          - apigateway-localnode.tls.ai
    ports:
      - "9443:9443"
    volumes:
      - c:/anv/storage:/var/www/html
      - api_gateway_keys:/home/user/api-gateway/config/keys
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    depends_on:
      - redis
    environment:
      - GATEWAY_HOST=apigateway.tls.ai
      - API_HOST=api.tls.ai
      - DASH_API_URL=https://api.tls.ai:5443
      - GATEWAY_SECURE_URL=https://apigateway.tls.ai:9443
      - GATEWAY_URL=http://apigateway.tls.ai:8080
      - REDIS_HOST=redis.tls.ai
      - RUN_AS_USER=user
      #- ENABLE_CHOWN=false
    env_file:
      - env/api-gateway.env
      - env/global.env
    logging:
      options:
        max-size: 1g



  api:
    image: gcr.io/anyvision-production/api:1.20.2-rc.1
    restart: always
    networks:
      prod:
        aliases:
          - api.tls.ai
          - api-localnode.tls.ai
    ports:
      - "5443:5443"
      - "3000:3000"
    volumes:
      - c:/anv/storage:/var/www/html
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - API_IP=api.tls.ai
      - MONGO_DB_IP=mongodb.tls.ai
      - CA_HOST=apigateway.tls.ai
      - MASS_IMPORT_IP=reid-localnode.tls.ai          ### use this configuration to configure localhost reid service
      - RUN_AS_USER=user
      #- ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g



  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g



  backend:
    image: gcr.io/anyvision-production/backend-cpu:development
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    networks:
      prod:
        aliases:
          - proc-localnode.tls.ai
          - reid-localnode.tls.ai
          - coll-localnode.tls.ai
          - arch-localnode.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
      - "nginx-master-localnode.tls.ai:1.1.1.1"
    ports:
      #- "4005:4005"
      #- "9067:9067"
      #- "9068:9068"
      #- "9069:9069"
      #- "9022:9022" #ssh
      - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    volumes:
      - c:/anv/home/user/license:/home/user/license:ro
      - c:/anv/storage/backend_data:/root/pipe_data
      - c:/anv/storage/track_archive_service_data:/root/track_archive_service_data
      - c:/anv/storage:/var/www/html
      - c:/anv/usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    environment:
      - misc_pipe_cpu_mode=true
      - NVIDIA_VISIBLE_DEVICES=
      - NVIDIA_DRIVER_CAPABILITIES=
      - DISPLAY=10.0.75.1:0.0
      - external_ip=proc-localnode.tls.ai
      - storage_ip=nginx-localnode.tls.ai
      - frame_store_storage_ip=nginx-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
    env_file:
      - env/backend.env
      - env/global.env
    logging:
      options:
        max-size: 1g
    ipc: host



  dante-proxy:
    image: gcr.io/anyvision-production/dante-proxy
    restart: always
    networks:
      - prod
    ports:
      - "1080:1080"
    #volumes:
      #- /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: 1g



  # dashboard-updater:
  #   image: gcr.io/anyvision-production/dashboard-updater:latest
  #   restart: always
  #   networks:
  #     - prod
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - c:/anv/storage/dashboards:/opt/nginx/html:rw
  #     #- /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   environment:
  #     - limit_rate_speed=0
  #     - DASHBOARD_VERSION=1.20.0
  #     - ENABLE_FETCHER=false
  #     - ENABLE_NGINX=true
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g
