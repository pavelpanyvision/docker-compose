#filename: docker-compose-apimaster.yml
version: '3.3'


networks:
  prod:


services:


  dashboard-master:
    image: gcr.io/anyvision-production/dashboard-master:development
    restart: always
    networks:
      prod:
        aliases:
          - dashboard-master-localnode.tls.ai
    ports:
      #- "443:443"
      - "80:80"
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - limit_rate_speed=0
      - master_api_ip=api-master.tls.ai
      - master_api_username=admin
      - master_api_password=admin
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  api-master:
    image: gcr.io/anyvision-production/api-master:development
    restart: always
    networks:
      prod:
        aliases:
          - api-master.tls.ai
    ports:
      - "27183:27183"
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - API_MASTER_PORT=27183
      - SELF_API_HOST=api.tls.ai
      - SELF_API_PORT=3000
      - MONGO_DB_IP=mongodb.tls.ai
      - MONGO_DB_PORT=27017
      - RUN_AS_USER=user
      #- ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/api-master.env
      - env/api.env
    logging:
      options:
        max-size: 1g

  rabbitmq-master:
    image: gcr.io/anyvision-production/rabbitmq:latest
    restart: always
    networks:
      prod:
        aliases:
          - rabbitmq-master.tls.ai
    # those port should be opened only development mode
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
      - "15671:15671"
    volumes:
      - /storage/rabbitmq:/var/lib/rabbitmq
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g


  nginx-master:
    image: gcr.io/anyvision-production/nginx:tls.ai
    restart: always
    networks:
      prod:
        aliases:
          - nginx-master-localnode.tls.ai
    ports:
      - "443:443"
    volumes:
      - /storage:/opt/nginx/html:ro
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - limit_rate_speed=0
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  api:
    image: gcr.io/anyvision-production/api:1.20.2-rc.4
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity
    networks:
      prod:
        aliases:
          - api.tls.ai
          - api-localnode.tls.ai
    ports:
      - "5443:5443"
      - "38389:38389"
      - "3000:3000"
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /home/anyvision/Projects/Dash-API:/home/user/Dash-API               ### mount your local project directory to the container
    environment:
      - API_IP=api.tls.ai
      - MONGO_DB_IP=mongodb.tls.ai
      - CA_HOST=apigateway.tls.ai
      - MASS_IMPORT_IP=reid-localnode.tls.ai          ### use this configuration to configure localhost reid service
      - RUN_AS_USER=user
      - ENABLE_CHOWN=false
    env_file:
      - env/global.env
      - env/api.env
    logging:
      options:
        max-size: 1g



  mongodb:
    image: gcr.io/anyvision-production/mongo:3.6-jessie
    restart: always
    networks:
      prod:
        aliases:
          - mongodb.tls.ai
    ports:
      - "27017:27017"
    volumes:
      - /ssd/mongo_db_data:/data/db
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    env_file:
      - env/global.env
    logging:
      options:
        max-size: 1g



  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g



  backend:
    image: gcr.io/anyvision-production/backend-pyconcrete:1.20.2-rc.7
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    networks:
      prod:
        aliases:
          - proc-localnode.tls.ai
          - reid-localnode.tls.ai
          - coll-localnode.tls.ai
          - arch-localnode.tls.ai
    ports:
      - "4005:4005"
      - "9067:9067"
      - "9068:9068"
      - "9069:9069"
      - "9022:9022" #ssh
      - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    volumes:
      - /home/user/license:/home/user/license:ro
      - /ssd/backend_data:/root/pipe_data
      - /ssd/track_archive_service_data:/root/track_archive_service_data
      - /storage:/var/www/html
      #- /dev:/dev:rw       ## FOR ACCESSING DEVICES - HOT-PLUGGABLE
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /root/backend_trunk:/root/backend_trunk                             ### mount your local project directory to the container
    environment:
      - DISPLAY                                                              ### local display mode - do not forget to run "xhost +" as your local host user (not as root)
      - external_ip=proc-localnode.tls.ai
      - storage_ip=nginx-master-localnode.tls.ai
      - frame_store_storage_ip=nginx-master-localnode.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-localnode.tls.ai
      - collate_service_ip=coll-localnode.tls.ai
      - track_archive_service_ip=arch-localnode.tls.ai
    env_file:
      - env/backend.env
      - env/global.env
    logging:
      options:
        max-size: 1g
    ipc: host
