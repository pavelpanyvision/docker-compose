#filename: docker-compose-local-b.yml
version: '3.3'


volumes:
  redis_db_data:
  api_gateway_keys:
  consul_data:
  consul_agent_data:


networks:
  anyvision:


services:

  seaweedfs-master:
    image: gcr.io/anyvision-production/seaweedfs:1.10
#    ports:
#      - 9333:9333
    environment:
      - SEAWEEDFS_MASTER=1
      - SEAWEEDFS_MASTER_PORT=9333
      - SEAWEEDFS_MASTER_CMD=-port=9333 -ip=seaweedfs-master.tls.ai -mdir=/data -peers=seaweedfs-master.tls.ai:9333
    volumes:
      - /data:/data
    networks:
      anyvision:
        aliases:
         - seaweedfs-master.tls.ai


  seaweedfs-volume:
    image: gcr.io/anyvision-production/seaweedfs:1.10
    environment:
      - SEAWEEDFS_VOLUME=1
      - SEAWEEDFS_VOLUME_PORT=8080
      - SEAWEEDFS_VOLUME_CMD=-port=8080 -ip=seaweedfs-volume.tls.ai -index=memory -max=100000 -mserver=seaweedfs-master.tls.ai:9333 -dir=/data
    volumes:
      - /data:/data
    networks:
      anyvision:
        aliases:
         - seaweedfs-volume.tls.ai


  seaweedfs-filer:
    image: gcr.io/anyvision-production/seaweedfs:1.10
    ports:
       - 8888:8888
    depends_on:
      - seaweedfs-master
    environment:
      - SEAWEEDFS_FILER=1
      - SEAWEEDFS_FILER_PORT=8888
      - SEAWEEDFS_FILER_CMD=-ip=seaweedfs-filer.tls.ai -master=seaweedfs-master.tls.ai:9333
    networks:
      anyvision:
        aliases:
         - seaweedfs-filer.tls.ai


  seaweedfs-s3:
    image: gcr.io/anyvision-production/seaweedfs:1.10
    ports:
       - 8333:8333
    depends_on:
      - seaweedfs-master
    environment:
      - SEAWEEDFS_S3=1
      - SEAWEEDFS_S3_PORT=8333
      #- SEAWEEDFS_S3_CMD=-port=8333 -domainName=tls.ai -filer=seaweedfs-filer.tls.ai:8888 -filer.grpcPort=18888 -filer.dir.buckets=/buckets
      - SEAWEEDFS_S3_CMD=-port=8333 -filer=seaweedfs-filer.tls.ai:8888 -filer.grpcPort=18888 -filer.dir.buckets=/buckets
    networks:
      anyvision:
        aliases:
         - seaweedfs-s3.tls.ai


  consul:
    image: gcr.io/anyvision-production/consul:1.4.0
    command: agent -server -client=0.0.0.0 -bootstrap -ui -datacenter=${SITE:-dc1}
    networks:
      anyvision:
        aliases:
        - consul.tls.ai
    ports:
    - "8500:8500"
    volumes:
    - consul_data:/data
    restart: always
    env_file:
      - ../../env/global.env


  consul-agent:
    image: gcr.io/anyvision-production/consul-agent:1.4.0
    networks:
      anyvision:
        aliases:
          - consul-agent.tls.ai
    volumes:
    - consul_agent_data:/data
    - /etc/hostname:/etc/host_hostname:ro
    restart: always
    environment:
    - SITE=dc1
    env_file:
      - ../../env/global.env    


  guacamole:
    image: gcr.io/anyvision-production/guacamole:0.9.14
    restart: always
    networks:
      - anyvision
    ports:
      - "8080:8080"
    volumes:
      - ../../guacamole/user-mapping-local.xml:/etc/guacamole/user-mapping.xml
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - GUACD_LOGLEVEL=info
    env_file:
      - ../../env/global.env
    logging:
      options:
        max-size: 1g



  sftp:
    image: gcr.io/anyvision-production/sftp:alpine
    restart: always
    networks:
      - anyvision
    volumes:
      - /storage/sftp_data:/home/user
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    command: user:pass:2000:2000:files
    env_file:
      - ../../env/global.env
    logging:
      options:
        max-size: 1g



  nginx:
    image: gcr.io/anyvision-production/nginx:18.12
    restart: always
    networks:
      anyvision:
        aliases:
          - nginx-b.tls.ai
    ports:
      - "1935:1935"
      - "443:443"
      #- "80:80"
    volumes:
      - /storage:/opt/nginx/html:ro
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - limit_rate_speed=0
      - aws_host="seaweedfs-s3.tls.ai:8333"
    env_file:
      - ../../env/global.env
    logging:
      options:
        max-size: 1g



  cron:
    image: gcr.io/anyvision-production/supercronic:18.12
    restart: always
    networks:
      anyvision:
        aliases:
        - cron-b.tls.ai
    volumes:
      - /storage:/var/www/html
      - ../../crontab/site_crontab:/etc/crontabs/crontab
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - TO_DATE_TRACK_DELETE=30
    env_file:
      - ../../env/global.env
    logging:
      options:
        max-size: 1g



  # rabbitmq:
  #   image: gcr.io/anyvision-production/rabbitmq:18.12
  #   restart: always
  #   networks:
  #     anyvision:
  #       aliases:
  #         - rabbitmq.tls.ai
  #   # these ports should be opened only in development mode
  #   ports:
  #     - "5671:5671"
  #     - "5672:5672"
  #     - "15672:15672"
  #     - "15671:15671"
  #   volumes:
  #     - /storage/rabbitmq:/var/lib/rabbitmq
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g



  mongodb:
    image: gcr.io/anyvision-production/mongo:18.12
    restart: always
    networks:
      anyvision:
        aliases:
          - mongodb.tls.ai
    #ports:
      #- "27017:27017"
    volumes:
      - /ssd/mongo_db_data:/data/db
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    env_file:
      - ../../env/global.env
    logging:
      options:
        max-size: 1g



  redis:
    image: gcr.io/anyvision-production/redis:18.12
    restart: always
    networks:
      anyvision:
        aliases:
          - redis.tls.ai
    sysctls:
      - net.core.somaxconn=511
    volumes:
      - redis_db_data:/data:rw
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    logging:
      options:
        max-size: 1g



  # broadcaster:
  #   image: gcr.io/anyvision-production/broadcaster:development
  #   restart: always
  #   #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
  #   hostname: broadcaster
  #   #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
  #   networks:
  #     anyvision:
  #       aliases:
  #         - broadcaster.tls.ai
  #   volumes:
  #     - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   depends_on:
  #     - api
  #   environment:
  #     - api_service_ip=api.tls.ai
  #     - BCAST_SOCKETIO_API_URL=https://api.tls.ai:5443
  #     - RUN_AS_USER=user
  #     #- ENABLE_DOCKERIZE=false
  #     #- ENABLE_CHOWN=false
  #   env_file:
  #     - env/global.env
  #     - env/broadcaster.env
  #   logging:
  #     options:
  #       max-size: 1g



  apigateway:
    image: gcr.io/anyvision-production/api-gateway:development
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      anyvision:
        aliases:
          - apigateway.tls.ai
    ports:
      - "9443:9443"
      #- "38391:38391"
    volumes:
      - /storage:/var/www/html
      - api_gateway_keys:/home/user/api-gateway/config/keys
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /home/anyvision/Projects/API-gateway:/home/user/api-gateway         ### mount your local project directory to the container
    depends_on:
      - redis
    environment:
      - GATEWAY_HOST=apigateway.tls.ai
      - API_HOST=api.tls.ai
      - DASH_API_URL=https://api.tls.ai:5443
      - GATEWAY_SECURE_URL=https://apigateway.tls.ai:9443
      - GATEWAY_URL=http://apigateway.tls.ai:8080
      - REDIS_HOST=redis.tls.ai
      - RUN_AS_USER=user
      #- ENABLE_CHOWN=false
    env_file:
      - ../../env/api-gateway.env
      - ../../env/global.env
    logging:
      options:
        max-size: 1g



  api:
    image: gcr.io/anyvision-production/api:development
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity
    networks:
      anyvision:
        aliases:
          - api.tls.ai
    extra_hosts:
      - proc-a01.tls.ai:<ip of a01 server>
      - nginx-a01.tls.ai:<ip of a01 server>
      #- proc-a02.tls.ai:<ip of a02 server>
      #- nginx-a02.tls.ai:<ip of a02 server>
      #- proc-a03.tls.ai:<ip of a03 server>
      #- nginx-a03.tls.ai:<ip of a03 server>
      #- proc-a04.tls.ai:<ip of a04 server>
      #- nginx-a04.tls.ai:<ip of a04 server>
    ports:
      - "5443:5443"
      #- "38389:38389"
      - "3000:3000"
    volumes:
      - /storage:/var/www/html
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /home/anyvision/Projects/Dash-API:/home/user/Dash-API               ### mount your local project directory to the container
    environment:
      - API_IP=api.tls.ai
      - MONGO_DB_IP=mongodb.tls.ai
      - CA_HOST=apigateway.tls.ai
      - MASS_IMPORT_IP=reid-b.tls.ai                               ### use this configuration to configure the "b" server reid service in a/b architecture
      - RUN_AS_USER=user
      #- ENABLE_CHOWN=false
    env_file:
      - ../../env/global.env
      - ../../env/api.env
    logging:
      options:
        max-size: 1g



  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
    environment:
      - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g



  backend:
    image: gcr.io/anyvision-production/backend:0.0.1.2-insights
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true   ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    networks:
      anyvision:
        aliases:
          - proc-b.tls.ai
          - reid-b.tls.ai
          - coll-b.tls.ai
          - arch-b.tls.ai
    ports:
      - "4005:4005"
      - "9067:9067"
      - "9068:9068"
      - "9069:9069"
      #- "9022:9022" #ssh
      - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    extra_hosts:
      - nginx-a01.tls.ai:<ip of a01 server>
      #- nginx-a02.tls.ai:<ip of a02 server>
      #- nginx-a03.tls.ai:<ip of a03 server>
      #- nginx-a04.tls.ai:<ip of a04 server>
    volumes:
      - /home/user/license:/home/user/license:ro
      - /ssd/backend_data:/root/pipe_data
      - /storage:/var/www/html
      #- /dev:/dev:rw       ## FOR ACCESSING DEVICES - HOT-PLUGGABLE
      - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      #- /root/backend_trunk:/root/backend_trunk                             ### mount your local project directory to the container
    environment:
      - DISPLAY                                                              ### local display mode - do not forget to run "xhost +" as your local host user (not as root)
      - external_ip=proc-b.tls.ai
      - storage_ip=nginx-b.tls.ai
      - frame_store_storage_ip=nginx-b.tls.ai
      - redis_host=127.0.0.1
      - api_service_ip=api.tls.ai
      - mongodb_host=mongodb.tls.ai
      - reid_service_ip=reid-b.tls.ai
      - collate_service_ip=coll-b.tls.ai
      - track_archive_service_ip=arch-b.tls.ai
      - ENABLE_FRAMESTORE_CLEANER=false
      - ENABLE_PROCESS_SERVICE=false
      - ENABLE_XPRA_SERVICE=false
      - ENABLE_CRON_PIPE_IMG_TEMPORARY=false
    env_file:
      - ../../env/backend.env
      - ../../env/global.env
    logging:
      options:
        max-size: 1g
    ipc: host



  dante-proxy:
    image: gcr.io/anyvision-production/dante-proxy
    restart: always
    networks:
      - anyvision
    ports:
      - "1080:1080"
    extra_hosts:
      - nginx-a01.tls.ai:<ip of a01 server>
      #- nginx-a02.tls.ai:<ip of a02 server>
      #- nginx-a03.tls.ai:<ip of a03 server>
      #- nginx-a04.tls.ai:<ip of a04 server>
    volumes:
      - ./socks/sockd.conf:/etc/sockd.conf
      - /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: 1g



  # dashboard-updater:
  #   image: gcr.io/anyvision-production/dashboard-updater:latest
  #   restart: always
  #   networks:
  #     - anyvision
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - /ssd/dashboards:/opt/nginx/html:rw
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   environment:
  #     - limit_rate_speed=0
  #     - DASHBOARD_VERSION=${TAG_NAME}
  #     - ENABLE_FETCHER=false
  #     - ENABLE_NGINX=true
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g
