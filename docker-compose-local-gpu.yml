#filename: docker-compose-local-gpu.yml
version: '3.3'


volumes:
  redis_db_data:
  api_gateway_keys:
  consul_data:
  consul_agent_data:


networks:
  anyvision:


services:


  guacamole:
    image: gcr.io/anyvision-production/guacamole:0.9.14
    restart: always
    networks:
    - anyvision
    ports:
    - "8080:8080"
    volumes:
    - ./guacamole/user-mapping-local.xml:/etc/guacamole/user-mapping.xml
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    environment:
    - GUACD_LOGLEVEL=info
    env_file:
    - env/global.env
    logging:
      options:
        max-size: 1g



  sftp:
    image: gcr.io/anyvision-production/sftp:alpine
    restart: always
    networks:
    - anyvision
    volumes:
    - /storage/sftp_data:/home/user
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    command: user:pass:2000:2000:files
    env_file:
    - env/global.env
    logging:
      options:
        max-size: 1g



  nginx:
    image: gcr.io/anyvision-production/nginx:tls.ai
    restart: always
    networks:
      anyvision:
        aliases:
        - nginx-${node_name:-localnode}.tls.ai
    ports:
    - "1935:1935"
    - "443:443"
    #- "80:80"
    volumes:
    - /storage:/opt/nginx/html:ro
    - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    environment:
    - limit_rate_speed=0
    env_file:
    - env/global.env
    logging:
      options:
        max-size: 1g



  x11vnc:
    image: gcr.io/anyvision-production/x11vnc
    restart: always
    networks:
    - anyvision
    #ports:
    #- "5900:5900"
    volumes:
    - /tmp/.X11-unix:/tmp/.X11-unix:rw
    #- /dev/shm:/dev/shm:rw
    environment:
    - VNC_OPTIONS=-nodpms -noxdamage -shared -forever -passwd 123456 -rfbport 5900 -display ${DISPLAY:-:1}
    #- VNC_OPTIONS=-noshm -nodpms -noxdamage -shared -forever -passwd 123456 -rfbport 5900 -display ${DISPLAY:-:1}
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    ipc: host
    logging:
      options:
        max-size: 1g



  cron:
    image: gcr.io/anyvision-production/supercronic:containerpilot
    restart: always
    networks:
      anyvision:
        aliases:
        - cron-${node_name:-localnode}.tls.ai
    volumes:
    - /storage:/var/www/html
    - ./crontab/site_crontab:/etc/crontabs/crontab
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    environment:
    - TO_DATE_TRACK_DELETE=30
    env_file:
    - env/global.env
    logging:
      options:
        max-size: 1g



  rabbitmq:
    image: gcr.io/anyvision-production/rabbitmq:containerpilot
    restart: always
    networks:
      anyvision:
        aliases:
        - rabbitmq.tls.ai
      # those port should be opened only development mode
      #ports:
      #- "5671:5671"
      #- "5672:5672"
      #- "15672:15672"
      #- "15671:15671"
    volumes:
    - /storage/rabbitmq:/var/lib/rabbitmq
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    env_file:
    - env/global.env
    logging:
      options:
        max-size: 1g



  mongodb:
    image: gcr.io/anyvision-production/mongo:containerpilot
    restart: always
    networks:
      anyvision:
        aliases:
        - mongodb.tls.ai
      #ports:
      #- "27017:27017"
    volumes:
    - /ssd/mongo_db_data:/data/db
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    env_file:
    - env/global.env
    logging:
      options:
        max-size: 1g



  redis:
    image: gcr.io/anyvision-production/redis:containerpilot
    restart: always
    networks:
      anyvision:
        aliases:
        - redis.tls.ai
    sysctls:
    - net.core.somaxconn=511
    volumes:
    - redis_db_data:/data:rw
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    logging:
      options:
        max-size: 1g



  broadcaster:
    image: gcr.io/anyvision-production/broadcaster:1.20.1
    restart: always
    #network_mode: "host"       ## REQUIRED FOR MULTICAST BROADCASTING
    hostname: broadcaster
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      anyvision:
        aliases:
        - broadcaster.tls.ai
    volumes:
    - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    depends_on:
    - api
    environment:
    #- NODE_DEBUG_OPTION=--inspect=0.0.0.0:38391
    - api_service_ip=api.tls.ai
    - BCAST_SOCKETIO_API_URL=https://api.tls.ai:5443
    - RUN_AS_USER=user
    #- ENABLE_DOCKERIZE=false
    #- ENABLE_CHOWN=true
    env_file:
    - env/global.env
    - env/broadcaster.env
    logging:
      options:
        max-size: 1g



  apigateway:
    image: gcr.io/anyvision-production/api-gateway:1.20.1
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    networks:
      anyvision:
        aliases:
        - apigateway.tls.ai
    ports:
    - "9443:9443"
    #- "38391:38391"
    volumes:
    - /storage:/var/www/html
    - api_gateway_keys:/home/user/api-gateway/config/keys
    - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    #- /home/anyvision/Projects/API-gateway:/home/user/api-gateway         ### mount your local project directory to the container
    depends_on:
    - redis
    environment:
    - NODE_DEBUG_OPTION=--inspect=0.0.0.0:38391
    - GATEWAY_HOST=apigateway.tls.ai
    - API_HOST=api.tls.ai
    - DASH_API_URL=https://api.tls.ai:5443
    - GATEWAY_SECURE_URL=https://apigateway.tls.ai:9443
    - GATEWAY_URL=http://apigateway.tls.ai:8080
    - REDIS_HOST=redis.tls.ai
    - RUN_AS_USER=user
    #- ENABLE_CHOWN=true
    env_file:
    - env/api-gateway.env
    - env/global.env
    logging:
      options:
        max-size: 1g

  consul:
    image: consul:latest
    command: agent -server -client=0.0.0.0 -bootstrap -ui -datacenter=${SITE:-site1}
    networks:
      anyvision:
        aliases:
        - consul.tls.ai
    ports:
    - "8400:8400"
    - "8500:8500"
    - "8600:8600"
    - "8301:8301"
    - "8302:8302"
    volumes:
    - consul_data:/data
    restart: always

  consul-agent:
    image: consul:latest
    command: agent -data-dir=/consul/data -config-dir=/consul/config  -log-level=${log_level_consul_agent:-info} -node=aharon-pc -datacenter=${SITE:-site1} -client=0.0.0.0 -rejoin -retry-join ${CONSUL:-consul.tls.ai} -retry-max 10 -retry-interval 15s
    #command: /usr/local/bin/consul agent -data-dir=/data -config-dir=/config -log-level=debug -log-level=${log_level_consul_agent:-info} -node=111 -datacenter=${SITE:-site1} -rejoin -retry-join ${CONSUL:-consul.tls.ai} -retry-max 10 -retry-interval 15s
    networks:
      anyvision:
        aliases:
          - consul-agent.tls.ai
    volumes:
    - consul_agent_data:/data
    - /etc/hostname:/etc/hostname:ro
    restart: always

  api:
    image: gcr.io/anyvision-training/api:con-pilot
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity
    networks:
      anyvision:
        aliases:
        - api.tls.ai
    ports:
    - "5443:5443"
    #- "38389:38389"
    - "3000:3000"
    volumes:
    - /storage:/var/www/html
    - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    #- /home/anyvision/Projects/Dash-API:/home/user/Dash-API               ### mount your local project directory to the container
    environment:
      - MONGO_DB_IP=mongodb.tls.ai
      - CONSUL_AGENT=consul-agent.tls.ai
      - CONSUL_SERVER=consul.tls.ai
    #- NODE_DEBUG_OPTION=--inspect=0.0.0.0:38389
    env_file:
    - env/global.env
    - env/api.env
    logging:
      options:
        max-size: 1g
    depends_on:
      - consul


  certificator:
    image: gcr.io/anyvision-production/certificator:latest
    restart: on-failure
    #command: --disable-services --no-exitkills --debug sleep infinity
    volumes:
    - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    environment:
    - ENABLE_COPY_CERT=true
    logging:
      options:
        max-size: 1g



  backend:
    image: gcr.io/anyvision-training/backend:con-pilot
    restart: always
    #command: --disable-services --no-exitkills --debug sleep infinity       ### development mode  - disable chaperone init
    privileged: true    ## FOR ACCESSING DEVICES - NOT HOT-PLUGGABLE
    networks:
      anyvision:
        aliases:
        - proc-${node_name:-localnode}.tls.ai
        - reid-${node_name:-localnode}.tls.ai
        - coll-${node_name:-localnode}.tls.ai
        - arch-${node_name:-localnode}.tls.ai
    extra_hosts:
    #The IP here should point to nginx of the master API
    - "nginx-master-${node_name:-localnode}.tls.ai:1.1.1.1"
    ports:
    #- "4005:4005"
    #- "9067:9067"
    #- "9068:9068"
    #- "9069:9069"
    #- "9022:9022" #ssh
    - "5000-5250:5000-5250/udp"                                            ### for remote VMS rtsp connections
    volumes:
    - /home/user/license:/home/user/license:ro
    - /ssd/backend_data:/root/pipe_data
    - /storage:/var/www/html
    #- /dev:/dev:rw       ## FOR ACCESSING DEVICES - HOT-PLUGGABLE
    - /usr/local/share/ca-certificates:/usr/local/share/ca-certificates
    - /tmp/.X11-unix:/tmp/.X11-unix:rw
    - /etc/localtime:/etc/localtime:ro
    #- /etc/timezone:/etc/timezone:ro
    #- /root/backend_trunk:/root/backend_trunk                             ### mount your local project directory to the container
    environment:
    #- ENABLE_OPENSSH_SERVICE=true
    - BACKEND_OPENSSH_PORT=9022
    - DISPLAY=${DISPLAY:-:1}                                               ### local display mode - do not forget to run "xhost +" as your local host user (not as root)
    - external_ip=proc-${node_name:-localnode}.tls.ai
    - storage_ip=nginx-${node_name:-localnode}.tls.ai
    - frame_store_storage_ip=nginx-${node_name:-localnode}.tls.ai
    - redis_host=127.0.0.1
    - api_service_ip=api.tls.ai
    - mongodb_host=mongodb.tls.ai
    - reid_service_ip=reid-${node_name:-localnode}.tls.ai
    - collate_service_ip=coll-${node_name:-localnode}.tls.ai
    - track_archive_service_ip=arch-${node_name:-localnode}.tls.ai
    - CONSUL=consul.tls.ai
    - CONSUL_PORT=8500
    env_file:
    - env/backend.env
    - env/global.env
    logging:
      options:
        max-size: 1g
    ipc: host
    depends_on:
      - consul



  dante-proxy:
    image: gcr.io/anyvision-production/dante-proxy
    restart: always
    networks:
    - anyvision
    ports:
    - "1080:1080"
    volumes:
    - /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: 1g



  docker-hoster:
    image: gcr.io/anyvision-production/docker-hoster
    restart: always
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock
    - /etc/hosts:/tmp/hosts
    logging:
      options:
        max-size: 1g



  # dashboard-updater:
  #   image: gcr.io/anyvision-production/dashboard-updater:latest
  #   restart: always
  #   networks:
  #     - anyvision
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - /ssd/dashboards:/opt/nginx/html:rw
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /etc/timezone:/etc/timezone:ro
  #   environment:
  #     - limit_rate_speed=0
  #     - DASHBOARD_VERSION=1.20.1
  #     - ENABLE_FETCHER=false
  #     - ENABLE_NGINX=true
  #   env_file:
  #     - env/global.env
  #   logging:
  #     options:
  #       max-size: 1g
